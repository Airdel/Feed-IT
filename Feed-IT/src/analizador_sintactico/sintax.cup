package analizador_sintactico;

import analizador_sintactico.C_Errores;
import interfaces.Editor;
import java.runtime.Symbol;

parser code
{:
    private Symbol s;

    public void syntax_error(Symbol s){
        Errores e = new Errores("Error sintactico en Linea " + (s.right+1) + "\n\tSintaxis invalida [ " + s.value +" ]");
        Feel.notificar(e);
        report_error("Error de sintaxis",null);
    }

    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{ 
        Errores e = new Errores("Error sintactico irrecuperable en Linea " + (s.right+1) + "\n\tSintaxis invalida [ " + s.value +" ]");
        Feel.notificar(e);
    }

    public void report_error(String message, Object info){ }    
    public void report_fatal_error(String message, Object info){ }

    public Symbol getS()
    {
        return this.s;
    }
:};


//Estructurales
terminal Main,Class,Fun;

//Puntuación
terminal P_coma,Coma,Parentesis_A,Parentesis_C,Llave_A,Llave_C;

//OPERADORES
terminal Suma,Resta,Multiplicacion,Division,Potencia,
                Modulo,And,Or,Not,Asignacion,Igual,OpR,Inc,Dec;

//Tipos de datos
terminal Int,Float,String,
                Double,Null,Boolean,
                Numero,Flotante,Texto,Identificador,Const;

//Condicionales, Bucles, ciclos y cosas así
terminal If,Else,
                 For,Do,
                GoBack,
                True,False,While;

//Palabras reservadas
terminal Humedad,Fagua,Peso,
                Fcomer,Fpremio,Fmasaje,
                Fluz,Fjuguete,Candil;

non terminal INICIO, SENTENCIA, DECLARACIÓN, IF,
             FUNCION, FUNCIONES,FOR,WHILE,OPERACION,
             ASIGNACION,SENTENCIABOOLEAN, PARAMETROS,TIPODATO,ENVIOPARAMETROS,EPSILON,
             ERRORES_INIT,ERRORES_DEC
;

start with INICIO;

INICIO ::= Class Identificador  Llave_A DECLARACION  FUNCIONES  Llave_C | 
           Class Identificador  Llave_A DECLARACION  FUNCIONES  Fun Main Parentesis_A Parentesis_C  Llave_A  SENTENCIA Llave_C Llave_C |
           ERRORES_INIT
;
SENTENCIA ::= DECLARACION |
              IF    |
              FOR|
              FUNCION|
              WHILE |
              ASIGNACION |
              OPERACION |
              EPSILON
;

DECLARACION ::= 
    Int Identificador P_coma SENTENCIA|
    Int Identificador Asignacion Numero P_coma SENTENCIA |
    Int Identificador Asignacion Identificador P_coma SENTENCIA |
    Float Identificador P_coma SENTENCIA |
    Float Identificador Asignacion Flotante P_coma SENTENCIA |
    Float Identificador Asignacion Identificador P_coma SENTENCIA | 
    String Identificador P_coma SENTENCIA |
    String Identificador Asignacion Texto P_coma SENTENCIA |
    String Identificador Asignacion Identificador P_coma SENTENCIA |
    Const  Identificador Asignacion Numero P_coma SENTENCIA |
    Const  Identificador Asignacion Texto P_coma  SENTENCIA |
    Const  Identificador Asignacion Flotante P_coma SENTENCIA |
    ERRORES_DEC |
    EPSILON
;


SENTENCIABOOLEAN :: = 
       True  |
       False |
       Identificador OpR Identificador | 
       Identificador OpR Numero | 
       Identificador OpR Flotante |
       Numero OpR Identificador | 
       Flotante OpR Identificador |
       Identificador Igual Texto |
       Texto Igual Identificador | 
       Identificador Igual Identificador |
       Identificador Igual Numero |
       Numero Igual Identificador | 
       Identificador Igual True | 
       Identificador Igual False | 
       True Igual Identificador  |
       False Igual Identificador  
;

IF ::=
    If Parentesis_A  SENTENCIABOOLEAN Parentesis_C Llave_A SENTENCIA Llave_C SENTENCIA|
    If Parentesis_A  SENTENCIABOOLEAN Parentesis_C Llave_A SENTENCIA Llave_C Else Llave_A SENTENCIA Llave_C SENTENCIA
;

FOR:: = 
    For Parentesis_A Int Identificador Asignacion Numero P_coma Identificador OpR Numero P_coma  Identificador Inc Parentesis_C 
    Llave_A   SENTENCIA  Llave_C SENTENCIA |
    For Parentesis_A Int Identificador Asignacion Numero P_coma Identificador OpR Identificador P_coma  Identificador Inc Parentesis_C 
    Llave_A   SENTENCIA  Llave_C SENTENCIA 
    For Parentesis_A Int Identificador Asignacion Numero P_coma Identificador OpR Numero P_coma  Identificador Dec Parentesis_C 
    Llave_A   SENTENCIA  Llave_C SENTENCIA |
    For Parentesis_A Int Identificador Asignacion Numero P_coma Identificador OpR Identificador P_coma  Identificador Dec Parentesis_C 
    Llave_A   SENTENCIA  Llave_C SENTENCIA 
;


WHILE ::= 
    While Parentesis_A SENTENCIABOOLEAN Parentesis_C  Llave_A   SENTENCIA  Llave_C SENTENCIA 
;


PARAMETROS :: = 
    Int Identificador |
    Float Identificador |
    String Identificador  |
    Int Identificador Coma PARAMETROS|
    Float Identificador Coma PARAMETROS |
    String Identificador Coma PARAMETROS |
;

TIPODATO :: = 
    Int |
    Float |
    String |
    Boolean
;

FUNCIONES ::=
    Fun Identificador Parentesis_A Parentesis_C  Llave_A SENTENCIA Llave_C SENTENCIA |
    Fun Identificador Parentesis_A PARAMETROS Parentesis_C  Llave_A SENTENCIA Llave_C SENTENCIA |
    Fun TIPODATO Identificador Parentesis_A Parentesis_C  Llave_A SENTENCIA GoBack Identificador Llave_C SENTENCIA |
    Fun TIPODATO Identificador Parentesis_A PARAMETROS Parentesis_C  Llave_A SENTENCIA GoBack Identificador Llave_C SENTENCIA |
    Fun Identificador Parentesis_A Parentesis_C  Llave_A SENTENCIA Llave_C FUNCIONES |
    Fun Identificador Parentesis_A PARAMETROS Parentesis_C  Llave_A SENTENCIA Llave_C FUNCIONES |
    Fun TIPODATO Identificador Parentesis_A Parentesis_C  Llave_A SENTENCIA GoBack Identificador Llave_C FUNCIONES |
    Fun TIPODATO Identificador Parentesis_A PARAMETROS Parentesis_C  Llave_A SENTENCIA GoBack Identificador Llave_C FUNCIONES 
;


ENVIOPARAMETROS :: = 
        Identificador |
        Identificador Coma ENVIOPARAMETROS |
        Numero |
        Numero Coma ENVIOPARAMETROS |
        Texto  |
        Texto Coma ENVIOPARAMETROS |
        Flotante | 
        Flotante Coma ENVIOPARAMETROS
;

FUNCION ::=
    Identificador Parentesis_A  Parentesis_C P_coma  SENTENCIA|
    Identificador Parentesis_A  ENVIOPARAMETROS Parentesis_C P_coma SENTENCIA |
    Fagua Parentesis_A  True Parentesis_C P_Coma SENTENCIA |
    Fagua Parentesis_A  False Parentesis_C P_Coma SENTENCIA | 
    Fcomer Parentesis_A  True Parentesis_C P_Coma SENTENCIA |
    Fcomer Parentesis_A  False Parentesis_C P_Coma SENTENCIA | 
    Fluz Parentesis_A  True Parentesis_C P_Coma SENTENCIA |
    Fluz Parentesis_A  False Parentesis_C P_Coma SENTENCIA | 
    Fjuguete Parentesis_A  True Parentesis_C P_Coma SENTENCIA |
    Fjuguete Parentesis_A  False Parentesis_C P_Coma SENTENCIA | 
    Fmasaje Parentesis_A  True Parentesis_C P_Coma SENTENCIA |
    Fmasaje Parentesis_A  False Parentesis_C P_Coma SENTENCIA | 
    Fpremio Parentesis_A  True Parentesis_C P_Coma SENTENCIA |
    Fpremio Parentesis_A  False Parentesis_C P_Coma SENTENCIA 
;

ARITMETICA:: = 
 
    Identificador Suma ARITMETICA |
    Numero Suma ARITMETICA |
  
    Identificador Resta ARITMETICA  |
    Numero Resta ARITMETICA  |

    Identificador Multiplicacion ARITMETICA  |
    Numero Multiplicacion ARITMETICA  |
    
    Identificador Division ARITMETICA  |
    Numero Division ARITMETICA  |
   

    Identificador Potencia ARITMETICA  |
    Numero Potencia ARITMETICA  |
   
    Numero |
    Identificador
;

EPSILON :: = 
;
//uma,Resta,Multiplicacion,Division,Potencia
/*--------------------------------------------Errores posibles-----------------------------------------------------------------*/

ERRORES_INIT ::=
    Identificador Llave_A Llave_C   |   //Se esperaba la palabra Class
    Class Llave_A Llave_C           |   //Se esperaba un identificador
    Class Identificador Llave_C     |   //Se esperaba una llave de apertura
    Class Identificador Llave_A     |   //Se esperaba una llave de cierre
    Class Identificador             |   //Se esperaba llaves de apertura y cierra
;
//----------------------------------
ERRORES_DEC ::=
    Identificador P_Coma            |   //Se esperaba un tipo de dato
    Identificador SENTENCIA         |   //Se esperaba un tipo de dato
    Identificador SENTENCIABOOLEAN  |   //Se esperaba un tipo de dato

//Errores para tipo de dato Int

    TIPODATO P_Coma                      |   //Se esperaba un identificador
    TIPODATO P_Coma SENTENCIA            |   //Se esperaba un identificador
    TIPODATO P_Coma SENTENCIABOOLEAN     |   //Se esperaba un identificador

    TIPODATO Identificador               |   //Se esperaba un delimitador[;]
    TIPODATO Identificador SENTENCIA     |   //Se esperaba un delimitador[;]
    TIPODATO Identificador SENTENCIABOOLEAN              |   //Se esperaba un delimitador[;]

    TIPODATO Asignacion Numero P_Coma                    |   //Se esperaba un identificador
    TIPODATO Asignacion Numero P_Coma SENTENCIA          |   //Se esperaba un identificador
    TIPODATO Asignacion Numero P_Coma SENTENCIABOOLEAN   |   //Se esperaba un identificador

    TIPODATO Numero P_Coma               |   //Se esperaba un Identificador 
    TIPODATO Numero P_Coma SENTENCIA     |   //Se esperaba un Identificador 
    TIPODATO Numero P_Coma SENTENCIABOOLEAN              |   //Se esperaba un Identificador 

    TIPODATO Asignacion P_Coma           |   //Se esperaba un Identificador
    TIPODATO Asignacion P_Coma SENTENCIA |   //Se esperaba un identificador
    TIPODATO Asignacion P_Coma SENTENCIABOOLEAN  |   //Se esperaba un identificador

    TIPODATO Identificador Numero P_Coma                     |   //Se esperaba un operador de asignación
    TIPODATO Identificador Numero P_Coma SENTENCIA           |   //Se esperaba un operador de asignación
    TIPODATO Identificador Numero P_Coma SENTENCIABOOLEAN    |   //Se esperaba un operador de asignación

    TIPODATO Identificador Asignacion P_Coma                     |   //Se esperaba un valor
    TIPODATO Identificador Asignacion P_Coma SENTENCIA           |   //Se esperaba un valor
    TIPODATO Identificador Asignacion P_Coma SENTENCIABOOLEAN    |   //Se esperaba un valor
    //Asignación de valores erroneos a un tipo de dato en especifico 

    ------------------------------------------ ERRORES SEMANTICOS-----------------------------------------------------------------------------------------------
    Int Identificador Asignacion Texto P_Coma SENTENCIA     |         //No se puede asignar Texto a un Int
    Int Identificador Asignacion Texto P_Coma SENTENCIABOOLEAN        //No se puede asignar Texto a un Int

;