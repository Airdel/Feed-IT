
//----------------------------------------------------
// The following code was generated by CUP v0.11a beta 20060608
<<<<<<< HEAD
// Tue Dec 07 01:35:50 MST 2021
=======
// Mon Dec 06 20:31:16 MST 2021
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
//----------------------------------------------------

package analizador_sintactico;

import interfaces.FeedIT;
import java_cup.runtime.Symbol;

/** CUP v0.11a beta 20060608 generated parser.
<<<<<<< HEAD
  * @version Tue Dec 07 01:35:50 MST 2021
=======
  * @version Mon Dec 06 20:31:16 MST 2021
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
  */
public class Sintax extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public Sintax() {super();}

  /** Constructor which sets the default scanner. */
  public Sintax(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public Sintax(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
<<<<<<< HEAD
    "\000\241\000\002\002\004\000\002\002\006\000\002\002" +
=======
    "\000\232\000\002\002\004\000\002\002\006\000\002\002" +
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
    "\010\000\002\002\014\000\002\002\011\000\002\002\015" +
    "\000\002\002\007\000\002\002\007\000\002\003\003\000" +
    "\002\003\003\000\002\003\003\000\002\003\003\000\002" +
<<<<<<< HEAD
    "\003\003\000\002\003\003\000\002\003\003\000\002\004" +
    "\006\000\002\004\006\000\002\004\006\000\002\004\006" +
    "\000\002\004\005\000\002\004\005\000\002\004\005\000" +
    "\002\004\005\000\002\004\004\000\002\004\004\000\002" +
    "\004\004\000\002\004\004\000\002\016\007\000\002\016" +
    "\007\000\002\016\007\000\002\016\007\000\002\016\011" +
    "\000\002\016\011\000\002\016\011\000\002\016\007\000" +
    "\002\016\006\000\002\016\006\000\002\016\006\000\002" +
    "\016\006\000\002\016\010\000\002\016\010\000\002\016" +
    "\010\000\002\016\006\000\002\005\003\000\002\005\005" +
    "\000\002\005\005\000\002\005\005\000\002\005\005\000" +
    "\002\005\005\000\002\005\005\000\002\005\005\000\002" +
    "\005\005\000\002\005\005\000\002\005\005\000\002\005" +
    "\005\000\002\006\003\000\002\006\003\000\002\007\012" +
    "\000\002\007\011\000\002\007\011\000\002\007\010\000" +
    "\002\007\013\000\002\007\014\000\002\007\015\000\002" +
    "\007\015\000\002\007\014\000\002\007\016\000\002\007" +
    "\015\000\002\007\012\000\002\007\011\000\002\007\011" +
    "\000\002\007\010\000\002\007\013\000\002\007\014\000" +
    "\002\007\015\000\002\007\015\000\002\007\014\000\002" +
    "\007\016\000\002\007\015\000\002\010\024\000\002\010" +
    "\023\000\002\010\022\000\002\010\023\000\002\010\024" +
    "\000\002\010\023\000\002\010\022\000\002\010\023\000" +
    "\002\010\024\000\002\010\023\000\002\010\022\000\002" +
    "\010\023\000\002\010\024\000\002\010\023\000\002\010" +
    "\022\000\002\010\023\000\002\011\010\000\002\011\011" +
    "\000\002\011\011\000\002\011\012\000\002\012\011\000" +
    "\002\012\012\000\002\012\011\000\002\012\012\000\002" +
    "\013\006\000\002\013\006\000\002\013\006\000\002\013" +
    "\006\000\002\013\005\000\002\013\005\000\002\013\005" +
    "\000\002\013\005\000\002\013\004\000\002\013\004\000" +
    "\002\013\004\000\002\013\004\000\002\015\007\000\002" +
    "\015\007\000\002\015\007\000\002\015\007\000\002\015" +
    "\011\000\002\015\011\000\002\015\011\000\002\015\007" +
    "\000\002\015\007\000\002\015\007\000\002\015\007\000" +
    "\002\015\011\000\002\015\011\000\002\015\011\000\002" +
    "\015\006\000\002\015\006\000\002\015\006\000\002\015" +
    "\006\000\002\015\010\000\002\015\010\000\002\015\010" +
    "\000\002\014\010\000\002\014\010\000\002\014\010\000" +
    "\002\014\010\000\002\014\010\000\002\014\010\000\002" +
    "\014\010\000\002\014\007\000\002\014\007\000\002\014" +
    "\007\000\002\014\007\000\002\014\007\000\002\014\007" +
    "\000\002\014\007\000\002\017\005\000\002\017\005\000" +
    "\002\017\006\000\002\020\011\000\002\020\012\000\002" +
    "\020\016\000\002\020\017\000\002\020\020\000\002\020" +
    "\017\000\002\021\007\000\002\021\006" });
=======
    "\003\003\000\002\004\006\000\002\004\006\000\002\004" +
    "\006\000\002\004\006\000\002\004\005\000\002\004\005" +
    "\000\002\004\005\000\002\004\005\000\002\004\004\000" +
    "\002\004\004\000\002\004\004\000\002\004\004\000\002" +
    "\005\007\000\002\005\007\000\002\005\007\000\002\005" +
    "\007\000\002\005\007\000\002\005\006\000\002\005\006" +
    "\000\002\005\006\000\002\005\006\000\002\005\006\000" +
    "\002\006\003\000\002\006\003\000\002\007\003\000\002" +
    "\007\005\000\002\007\005\000\002\007\005\000\002\007" +
    "\005\000\002\007\005\000\002\007\005\000\002\007\005" +
    "\000\002\007\005\000\002\007\005\000\002\007\005\000" +
    "\002\007\005\000\002\007\005\000\002\007\005\000\002" +
    "\010\012\000\002\010\011\000\002\010\011\000\002\010" +
    "\010\000\002\010\013\000\002\010\014\000\002\010\015" +
    "\000\002\010\015\000\002\010\014\000\002\010\016\000" +
    "\002\010\015\000\002\011\024\000\002\011\023\000\002" +
    "\011\022\000\002\011\023\000\002\011\024\000\002\011" +
    "\023\000\002\011\022\000\002\011\023\000\002\011\024" +
    "\000\002\011\023\000\002\011\022\000\002\011\023\000" +
    "\002\011\024\000\002\011\023\000\002\011\022\000\002" +
    "\011\023\000\002\012\010\000\002\012\011\000\002\012" +
    "\011\000\002\012\012\000\002\013\015\000\002\013\014" +
    "\000\002\013\013\000\002\013\015\000\002\013\013\000" +
    "\002\013\014\000\002\013\015\000\002\013\013\000\002" +
    "\013\014\000\002\013\015\000\002\013\013\000\002\013" +
    "\014\000\002\013\017\000\002\013\016\000\002\013\015" +
    "\000\002\013\016\000\002\013\017\000\002\013\016\000" +
    "\002\013\015\000\002\013\016\000\002\013\017\000\002" +
    "\013\016\000\002\013\015\000\002\013\016\000\002\013" +
    "\017\000\002\013\016\000\002\013\015\000\002\013\016" +
    "\000\002\014\006\000\002\014\006\000\002\014\006\000" +
    "\002\014\006\000\002\014\005\000\002\014\005\000\002" +
    "\014\005\000\002\014\005\000\002\014\010\000\002\014" +
    "\010\000\002\014\010\000\002\014\010\000\002\014\010" +
    "\000\002\014\007\000\002\014\007\000\002\014\007\000" +
    "\002\014\007\000\002\014\007\000\002\015\010\000\002" +
    "\015\010\000\002\015\010\000\002\015\010\000\002\015" +
    "\010\000\002\015\010\000\002\015\010\000\002\015\010" +
    "\000\002\015\010\000\002\015\010\000\002\015\010\000" +
    "\002\015\010\000\002\015\010\000\002\015\007\000\002" +
    "\015\007\000\002\015\007\000\002\015\007\000\002\015" +
    "\007\000\002\015\007\000\002\015\007\000\002\015\007" +
    "\000\002\015\007\000\002\015\007\000\002\015\007\000" +
    "\002\015\007\000\002\015\007" });
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
<<<<<<< HEAD
    "\000\u016e\000\006\005\004\006\005\001\002\000\004\046" +
    "\375\001\002\000\004\004\010\001\002\000\004\002\007" +
    "\001\002\000\004\002\001\001\002\000\004\011\011\001" +
    "\002\000\004\012\012\001\002\000\004\013\013\001\002" +
    "\000\042\014\014\035\026\036\020\037\042\042\043\046" +
    "\023\050\033\052\015\057\036\063\027\065\035\066\034" +
    "\067\040\070\030\071\016\073\032\001\002\000\004\002" +
    "\uffff\001\002\000\004\011\317\001\002\000\004\011\312" +
    "\001\002\000\004\014\ufff6\001\002\000\004\046\307\001" +
    "\002\000\004\014\ufff9\001\002\000\004\014\305\001\002" +
    "\000\006\011\301\027\047\001\002\000\004\014\ufff5\001" +
    "\002\000\004\014\ufff8\001\002\000\004\046\276\001\002" +
    "\000\004\011\270\001\002\000\004\011\263\001\002\000" +
    "\004\014\ufff4\001\002\000\004\011\256\001\002\000\004" +
    "\011\173\001\002\000\004\011\166\001\002\000\004\011" +
    "\161\001\002\000\004\011\122\001\002\000\004\014\ufff7" +
    "\001\002\000\004\011\115\001\002\000\004\014\ufff3\001" +
    "\002\000\004\046\112\001\002\000\004\046\045\001\002" +
    "\000\004\014\uffe7\001\002\000\006\007\046\027\047\001" +
    "\002\000\042\014\uffeb\035\026\036\020\037\042\042\043" +
    "\046\023\050\033\052\015\057\036\063\027\065\035\066" +
    "\034\067\040\070\030\071\016\073\032\001\002\000\024" +
    "\043\061\044\055\045\050\046\053\055\056\056\054\062" +
    "\060\064\051\072\057\001\002\000\004\007\106\001\002" +
    "\000\004\011\102\001\002\000\004\007\100\001\002\000" +
    "\004\007\076\001\002\000\012\007\uffc9\012\uffc9\024\uffc9" +
    "\025\uffc9\001\002\000\004\007\074\001\002\000\012\007" +
    "\uffca\012\uffca\024\uffca\025\uffca\001\002\000\004\011\070" +
    "\001\002\000\004\011\064\001\002\000\004\007\062\001" +
    "\002\000\042\014\uffde\035\026\036\020\037\042\042\043" +
    "\046\023\050\033\052\015\057\036\063\027\065\035\066" +
    "\034\067\040\070\030\071\016\073\032\001\002\000\004" +
    "\014\uffe6\001\002\000\004\012\065\001\002\000\004\007" +
    "\066\001\002\000\042\014\uffd9\035\026\036\020\037\042" +
    "\042\043\046\023\050\033\052\015\057\036\063\027\065" +
    "\035\066\034\067\040\070\030\071\016\073\032\001\002" +
    "\000\004\014\uffe1\001\002\000\004\012\071\001\002\000" +
    "\004\007\072\001\002\000\042\014\uffd8\035\026\036\020" +
    "\037\042\042\043\046\023\050\033\052\015\057\036\063" +
    "\027\065\035\066\034\067\040\070\030\071\016\073\032" +
    "\001\002\000\004\014\uffe0\001\002\000\042\014\uffdc\035" +
    "\026\036\020\037\042\042\043\046\023\050\033\052\015" +
    "\057\036\063\027\065\035\066\034\067\040\070\030\071" +
    "\016\073\032\001\002\000\004\014\uffe4\001\002\000\042" +
    "\014\uffd7\035\026\036\020\037\042\042\043\046\023\050" +
    "\033\052\015\057\036\063\027\065\035\066\034\067\040" +
    "\070\030\071\016\073\032\001\002\000\004\014\uffdf\001" +
    "\002\000\042\014\uffdb\035\026\036\020\037\042\042\043" +
    "\046\023\050\033\052\015\057\036\063\027\065\035\066" +
    "\034\067\040\070\030\071\016\073\032\001\002\000\004" +
    "\014\uffe3\001\002\000\004\012\103\001\002\000\004\007" +
    "\104\001\002\000\042\014\uffda\035\026\036\020\037\042" +
    "\042\043\046\023\050\033\052\015\057\036\063\027\065" +
    "\035\066\034\067\040\070\030\071\016\073\032\001\002" +
    "\000\004\014\uffe2\001\002\000\042\014\uffdd\035\026\036" +
    "\020\037\042\042\043\046\023\050\033\052\015\057\036" +
    "\063\027\065\035\066\034\067\040\070\030\071\016\073" +
    "\032\001\002\000\004\014\uffe5\001\002\000\004\014\uffef" +
    "\001\002\000\004\014\uffe8\001\002\000\006\007\113\027" +
    "\047\001\002\000\042\014\uffec\035\026\036\020\037\042" +
    "\042\043\046\023\050\033\052\015\057\036\063\027\065" +
    "\035\066\034\067\040\070\030\071\016\073\032\001\002" +
    "\000\004\014\ufff0\001\002\000\006\055\056\056\054\001" +
    "\002\000\004\012\117\001\002\000\004\007\120\001\002" +
    "\000\042\014\uff6e\035\026\036\020\037\042\042\043\046" +
    "\023\050\033\052\015\057\036\063\027\065\035\066\034" +
    "\067\040\070\030\071\016\073\032\001\002\000\004\014" +
    "\uff75\001\002\000\016\043\123\044\124\045\125\046\127" +
    "\055\056\056\054\001\002\000\006\030\156\031\155\001" +
    "\002\000\004\031\153\001\002\000\004\030\151\001\002" +
    "\000\004\012\142\001\002\000\006\030\132\031\131\001" +
    "\002\000\010\012\uffd6\024\uffd6\025\uffd6\001\002\000\010" +
    "\043\137\044\140\046\141\001\002\000\014\043\133\045" +
    "\134\046\135\055\056\056\054\001\002\000\010\012\uffcd" +
    "\024\uffcd\025\uffcd\001\002\000\010\012\uffd0\024\uffd0\025" +
    "\uffd0\001\002\000\010\012\uffce\024\uffce\025\uffce\001\002" +
    "\000\010\012\uffcb\024\uffcb\025\uffcb\001\002\000\010\012" +
    "\uffd4\024\uffd4\025\uffd4\001\002\000\010\012\uffd3\024\uffd3" +
    "\025\uffd3\001\002\000\010\012\uffd5\024\uffd5\025\uffd5\001" +
    "\002\000\004\013\143\001\002\000\042\014\144\035\026" +
    "\036\020\037\042\042\043\046\023\050\033\052\015\057" +
    "\036\063\027\065\035\066\034\067\040\070\030\071\016" +
    "\073\032\001\002\000\042\014\uffa2\035\026\036\020\037" +
    "\042\042\043\046\023\050\033\052\015\057\036\063\027" +
    "\065\035\066\034\067\040\070\030\071\016\073\032\001" +
    "\002\000\004\014\146\001\002\000\042\014\uffa1\035\026" +
    "\036\020\037\042\042\043\046\023\050\033\052\015\057" +
    "\036\063\027\065\035\066\034\067\040\070\030\071\016" +
    "\073\032\001\002\000\004\014\uff9f\001\002\000\004\014" +
    "\uffa0\001\002\000\004\046\152\001\002\000\010\012\uffcf" +
    "\024\uffcf\025\uffcf\001\002\000\004\046\154\001\002\000" +
    "\010\012\uffd1\024\uffd1\025\uffd1\001\002\000\004\046\160" +
    "\001\002\000\004\046\157\001\002\000\010\012\uffcc\024" +
    "\uffcc\025\uffcc\001\002\000\010\012\uffd2\024\uffd2\025\uffd2" +
    "\001\002\000\006\055\056\056\054\001\002\000\004\012" +
    "\163\001\002\000\004\007\164\001\002\000\042\014\uff71" +
    "\035\026\036\020\037\042\042\043\046\023\050\033\052" +
    "\015\057\036\063\027\065\035\066\034\067\040\070\030" +
    "\071\016\073\032\001\002\000\004\014\uff78\001\002\000" +
    "\006\055\056\056\054\001\002\000\004\012\170\001\002" +
    "\000\004\007\171\001\002\000\042\014\uff6d\035\026\036" +
    "\020\037\042\042\043\046\023\050\033\052\015\057\036" +
    "\063\027\065\035\066\034\067\040\070\030\071\016\073" +
    "\032\001\002\000\004\014\uff74\001\002\000\020\026\174" +
    "\043\123\044\124\045\125\046\127\055\056\056\054\001" +
    "\002\000\004\011\253\001\002\000\004\012\227\001\002" +
    "\000\010\012\200\024\177\025\201\001\002\000\016\043" +
    "\123\044\124\045\125\046\127\055\056\056\054\001\002" +
    "\000\004\013\203\001\002\000\016\043\123\044\124\045" +
    "\125\046\127\055\056\056\054\001\002\000\004\012\uff6a" +
    "\001\002\000\042\014\204\035\026\036\020\037\042\042" +
    "\043\046\023\050\033\052\015\057\036\063\027\065\035" +
    "\066\034\067\040\070\030\071\016\073\032\001\002\000" +
    "\044\014\uffc5\035\026\036\020\037\042\042\043\046\023" +
    "\050\033\051\217\052\015\057\036\063\027\065\035\066" +
    "\034\067\040\070\030\071\016\073\032\001\002\000\004" +
    "\014\206\001\002\000\044\014\uffc7\035\026\036\020\037" +
    "\042\042\043\046\023\050\033\051\207\052\015\057\036" +
    "\063\027\065\035\066\034\067\040\070\030\071\016\073" +
    "\032\001\002\000\004\013\211\001\002\000\004\014\uffc8" +
    "\001\002\000\042\014\212\035\026\036\020\037\042\042" +
    "\043\046\023\050\033\052\015\057\036\063\027\065\035" +
    "\066\034\067\040\070\030\071\016\073\032\001\002\000" +
    "\042\014\uffc3\035\026\036\020\037\042\042\043\046\023" +
    "\050\033\052\015\057\036\063\027\065\035\066\034\067" +
    "\040\070\030\071\016\073\032\001\002\000\004\014\214" +
    "\001\002\000\042\014\uffc1\035\026\036\020\037\042\042" +
    "\043\046\023\050\033\052\015\057\036\063\027\065\035" +
    "\066\034\067\040\070\030\071\016\073\032\001\002\000" +
    "\004\014\uffbf\001\002\000\004\014\uffc2\001\002\000\004" +
    "\013\221\001\002\000\004\014\uffc6\001\002\000\042\014" +
    "\222\035\026\036\020\037\042\042\043\046\023\050\033" +
    "\052\015\057\036\063\027\065\035\066\034\067\040\070" +
    "\030\071\016\073\032\001\002\000\004\014\uffc4\001\002" +
    "\000\004\014\224\001\002\000\042\014\uffc0\035\026\036" +
    "\020\037\042\042\043\046\023\050\033\052\015\057\036" +
    "\063\027\065\035\066\034\067\040\070\030\071\016\073" +
    "\032\001\002\000\004\014\uffbe\001\002\000\004\012\uff6b" +
    "\001\002\000\004\013\230\001\002\000\042\014\231\035" +
    "\026\036\020\037\042\042\043\046\023\050\033\052\015" +
    "\057\036\063\027\065\035\066\034\067\040\070\030\071" +
    "\016\073\032\001\002\000\044\014\uffba\035\026\036\020" +
    "\037\042\042\043\046\023\050\033\051\244\052\015\057" +
    "\036\063\027\065\035\066\034\067\040\070\030\071\016" +
    "\073\032\001\002\000\004\014\233\001\002\000\044\014" +
    "\uffbc\035\026\036\020\037\042\042\043\046\023\050\033" +
    "\051\234\052\015\057\036\063\027\065\035\066\034\067" +
    "\040\070\030\071\016\073\032\001\002\000\004\013\236" +
    "\001\002\000\004\014\uffbd\001\002\000\042\014\237\035" +
    "\026\036\020\037\042\042\043\046\023\050\033\052\015" +
    "\057\036\063\027\065\035\066\034\067\040\070\030\071" +
    "\016\073\032\001\002\000\042\014\uffb8\035\026\036\020" +
    "\037\042\042\043\046\023\050\033\052\015\057\036\063" +
    "\027\065\035\066\034\067\040\070\030\071\016\073\032" +
    "\001\002\000\004\014\241\001\002\000\042\014\uffb6\035" +
    "\026\036\020\037\042\042\043\046\023\050\033\052\015" +
    "\057\036\063\027\065\035\066\034\067\040\070\030\071" +
    "\016\073\032\001\002\000\004\014\uffb4\001\002\000\004" +
    "\014\uffb7\001\002\000\004\013\246\001\002\000\004\014" +
    "\uffbb\001\002\000\042\014\247\035\026\036\020\037\042" +
    "\042\043\046\023\050\033\052\015\057\036\063\027\065" +
    "\035\066\034\067\040\070\030\071\016\073\032\001\002" +
    "\000\004\014\uffb9\001\002\000\004\014\251\001\002\000" +
    "\042\014\uffb5\035\026\036\020\037\042\042\043\046\023" +
    "\050\033\052\015\057\036\063\027\065\035\066\034\067" +
    "\040\070\030\071\016\073\032\001\002\000\004\014\uffb3" +
    "\001\002\000\016\043\123\044\124\045\125\046\127\055" +
    "\056\056\054\001\002\000\004\012\255\001\002\000\004" +
    "\012\uff69\001\002\000\004\043\257\001\002\000\004\012" +
    "\260\001\002\000\004\007\261\001\002\000\042\014\uff6c" +
    "\035\026\036\020\037\042\042\043\046\023\050\033\052" +
    "\015\057\036\063\027\065\035\066\034\067\040\070\030" +
    "\071\016\073\032\001\002\000\004\014\uff73\001\002\000" +
    "\006\055\056\056\054\001\002\000\004\012\265\001\002" +
    "\000\004\007\266\001\002\000\042\014\uff70\035\026\036" +
    "\020\037\042\042\043\046\023\050\033\052\015\057\036" +
    "\063\027\065\035\066\034\067\040\070\030\071\016\073" +
    "\032\001\002\000\004\014\uff77\001\002\000\006\055\056" +
    "\056\054\001\002\000\004\012\272\001\002\000\004\007" +
    "\273\001\002\000\042\014\uff72\035\026\036\020\037\042" +
    "\042\043\046\023\050\033\052\015\057\036\063\027\065" +
    "\035\066\034\067\040\070\030\071\016\073\032\001\002" +
    "\000\004\014\uff79\001\002\000\004\014\uffea\001\002\000" +
    "\006\007\277\027\047\001\002\000\042\014\uffee\035\026" +
    "\036\020\037\042\042\043\046\023\050\033\052\015\057" +
    "\036\063\027\065\035\066\034\067\040\070\030\071\016" +
    "\073\032\001\002\000\004\014\ufff2\001\002\000\004\012" +
    "\302\001\002\000\004\007\303\001\002\000\042\014\uff61" +
    "\035\026\036\020\037\042\042\043\046\023\050\033\052" +
    "\015\057\036\063\027\065\035\066\034\067\040\070\030" +
    "\071\016\073\032\001\002\000\004\014\uff62\001\002\000" +
    "\004\002\ufffd\001\002\000\004\014\uffe9\001\002\000\006" +
    "\007\310\027\047\001\002\000\042\014\uffed\035\026\036" +
    "\020\037\042\042\043\046\023\050\033\052\015\057\036" +
    "\063\027\065\035\066\034\067\040\070\030\071\016\073" +
    "\032\001\002\000\004\014\ufff1\001\002\000\006\055\056" +
    "\056\054\001\002\000\004\012\314\001\002\000\004\007" +
    "\315\001\002\000\042\014\uff6f\035\026\036\020\037\042" +
    "\042\043\046\023\050\033\052\015\057\036\063\027\065" +
    "\035\066\034\067\040\070\030\071\016\073\032\001\002" +
    "\000\004\014\uff76\001\002\000\004\035\320\001\002\000" +
    "\004\046\321\001\002\000\004\027\322\001\002\000\004" +
    "\043\323\001\002\000\004\007\324\001\002\000\004\046" +
    "\325\001\002\000\004\031\326\001\002\000\006\043\327" +
    "\046\330\001\002\000\004\007\353\001\002\000\004\007" +
    "\331\001\002\000\004\046\332\001\002\000\006\032\333" +
    "\033\334\001\002\000\004\012\344\001\002\000\004\012" +
    "\335\001\002\000\004\013\336\001\002\000\042\014\337" +
    "\035\026\036\020\037\042\042\043\046\023\050\033\052" +
    "\015\057\036\063\027\065\035\066\034\067\040\070\030" +
    "\071\016\073\032\001\002\000\042\014\uffa4\035\026\036" +
    "\020\037\042\042\043\046\023\050\033\052\015\057\036" +
    "\063\027\065\035\066\034\067\040\070\030\071\016\073" +
    "\032\001\002\000\004\014\341\001\002\000\042\014\uffa5" +
    "\035\026\036\020\037\042\042\043\046\023\050\033\052" +
    "\015\057\036\063\027\065\035\066\034\067\040\070\030" +
    "\071\016\073\032\001\002\000\004\014\uffa6\001\002\000" +
    "\004\014\uffa3\001\002\000\004\013\345\001\002\000\042" +
    "\014\346\035\026\036\020\037\042\042\043\046\023\050" +
    "\033\052\015\057\036\063\027\065\035\066\034\067\040" +
    "\070\030\071\016\073\032\001\002\000\042\014\uffac\035" +
    "\026\036\020\037\042\042\043\046\023\050\033\052\015" +
    "\057\036\063\027\065\035\066\034\067\040\070\030\071" +
    "\016\073\032\001\002\000\004\014\350\001\002\000\042" +
    "\014\uffad\035\026\036\020\037\042\042\043\046\023\050" +
    "\033\052\015\057\036\063\027\065\035\066\034\067\040" +
    "\070\030\071\016\073\032\001\002\000\004\014\uffae\001" +
    "\002\000\004\014\uffab\001\002\000\004\046\354\001\002" +
    "\000\006\032\355\033\356\001\002\000\004\012\366\001" +
    "\002\000\004\012\357\001\002\000\004\013\360\001\002" +
    "\000\042\014\361\035\026\036\020\037\042\042\043\046" +
    "\023\050\033\052\015\057\036\063\027\065\035\066\034" +
    "\067\040\070\030\071\016\073\032\001\002\000\042\014" +
    "\uffa8\035\026\036\020\037\042\042\043\046\023\050\033" +
    "\052\015\057\036\063\027\065\035\066\034\067\040\070" +
    "\030\071\016\073\032\001\002\000\004\014\363\001\002" +
    "\000\042\014\uffa9\035\026\036\020\037\042\042\043\046" +
    "\023\050\033\052\015\057\036\063\027\065\035\066\034" +
    "\067\040\070\030\071\016\073\032\001\002\000\004\014" +
    "\uffaa\001\002\000\004\014\uffa7\001\002\000\004\013\367" +
    "\001\002\000\042\014\370\035\026\036\020\037\042\042" +
    "\043\046\023\050\033\052\015\057\036\063\027\065\035" +
    "\066\034\067\040\070\030\071\016\073\032\001\002\000" +
    "\042\014\uffb0\035\026\036\020\037\042\042\043\046\023" +
    "\050\033\052\015\057\036\063\027\065\035\066\034\067" +
    "\040\070\030\071\016\073\032\001\002\000\004\014\372" +
    "\001\002\000\042\014\uffb1\035\026\036\020\037\042\042" +
    "\043\046\023\050\033\052\015\057\036\063\027\065\035" +
    "\066\034\067\040\070\030\071\016\073\032\001\002\000" +
    "\004\014\uffb2\001\002\000\004\014\uffaf\001\002\000\004" +
    "\013\376\001\002\000\020\006\u0106\014\377\035\u0103\036" +
    "\u0100\037\u0107\042\u0102\046\u0105\001\002\000\004\002\000" +
    "\001\002\000\004\046\u016e\001\002\000\004\006\u0165\001" +
    "\002\000\004\046\u0161\001\002\000\004\046\u015e\001\002" +
    "\000\004\014\u015c\001\002\000\004\027\u0116\001\002\000" +
    "\006\004\u013a\046\u013b\001\002\000\004\046\u0114\001\002" +
    "\000\004\006\u010b\001\002\000\004\014\u010a\001\002\000" +
    "\004\002\ufffb\001\002\000\004\004\u010c\001\002\000\004" +
    "\011\u010d\001\002\000\004\012\u010e\001\002\000\004\013" +
    "\u010f\001\002\000\042\014\u0110\035\026\036\020\037\042" +
    "\042\043\046\023\050\033\052\015\057\036\063\027\065" +
    "\035\066\034\067\040\070\030\071\016\073\032\001\002" +
    "\000\004\014\uff9e\001\002\000\004\014\u0112\001\002\000" +
    "\004\014\uff9d\001\002\000\004\006\uff90\001\002\000\006" +
    "\007\u0115\027\u0116\001\002\000\014\006\uff94\035\u0103\036" +
    "\u0100\037\u0107\042\u0102\001\002\000\022\043\u011d\044\u011a" +
    "\045\u0117\055\056\056\054\062\u011c\064\u0118\072\u011b\001" +
    "\002\000\004\007\u0136\001\002\000\004\011\u0131\001\002" +
    "\000\004\007\u012e\001\002\000\004\007\u012b\001\002\000" +
    "\004\011\u0126\001\002\000\004\011\u0121\001\002\000\004" +
    "\007\u011e\001\002\000\016\006\uff80\035\u0103\036\u0100\037" +
    "\u0107\042\u0102\046\u0105\001\002\000\004\006\uff8e\001\002" +
    "\000\004\006\uff87\001\002\000\004\012\u0122\001\002\000" +
    "\004\007\u0123\001\002\000\016\006\uff7b\035\u0103\036\u0100" +
    "\037\u0107\042\u0102\046\u0105\001\002\000\004\006\uff89\001" +
    "\002\000\004\006\uff82\001\002\000\004\012\u0127\001\002" +
    "\000\004\007\u0128\001\002\000\016\006\uff7a\035\u0103\036" +
    "\u0100\037\u0107\042\u0102\046\u0105\001\002\000\004\006\uff88" +
    "\001\002\000\004\006\uff81\001\002\000\016\006\uff7e\035" +
    "\u0103\036\u0100\037\u0107\042\u0102\046\u0105\001\002\000\004" +
    "\006\uff8c\001\002\000\004\006\uff85\001\002\000\016\006" +
    "\uff7d\035\u0103\036\u0100\037\u0107\042\u0102\046\u0105\001\002" +
    "\000\004\006\uff8b\001\002\000\004\006\uff84\001\002\000" +
    "\004\012\u0132\001\002\000\004\007\u0133\001\002\000\016" +
    "\006\uff7c\035\u0103\036\u0100\037\u0107\042\u0102\046\u0105\001" +
    "\002\000\004\006\uff8a\001\002\000\004\006\uff83\001\002" +
    "\000\016\006\uff7f\035\u0103\036\u0100\037\u0107\042\u0102\046" +
    "\u0105\001\002\000\004\006\uff8d\001\002\000\004\006\uff86" +
    "\001\002\000\004\006\uff98\001\002\000\004\011\u0154\001" +
    "\002\000\004\011\u013c\001\002\000\004\012\u013d\001\002" +
    "\000\004\013\u013e\001\002\000\042\014\u013f\035\026\036" +
    "\020\037\042\042\043\046\023\050\033\052\015\057\036" +
    "\063\027\065\035\066\034\067\040\070\030\071\016\073" +
    "\032\001\002\000\004\006\u014c\001\002\000\004\014\u0141" +
    "\001\002\000\004\006\u0143\001\002\000\004\014\uff67\001" +
    "\002\000\006\004\u0144\046\u013b\001\002\000\004\011\u0145" +
    "\001\002\000\004\012\u0146\001\002\000\004\013\u0147\001" +
    "\002\000\042\014\u0148\035\026\036\020\037\042\042\043" +
    "\046\023\050\033\052\015\057\036\063\027\065\035\066" +
    "\034\067\040\070\030\071\016\073\032\001\002\000\004" +
    "\014\uff65\001\002\000\004\014\u014a\001\002\000\004\014" +
    "\uff64\001\002\000\004\014\uff68\001\002\000\006\004\u014d" +
    "\046\u013b\001\002\000\004\011\u014e\001\002\000\004\012" +
    "\u014f\001\002\000\004\013\u0150\001\002\000\042\014\u0151" +
    "\035\026\036\020\037\042\042\043\046\023\050\033\052" +
    "\015\057\036\063\027\065\035\066\034\067\040\070\030" +
    "\071\016\073\032\001\002\000\004\014\uff66\001\002\000" +
    "\004\014\u0153\001\002\000\004\014\uff63\001\002\000\004" +
    "\012\u0155\001\002\000\004\013\u0156\001\002\000\042\014" +
    "\u0157\035\026\036\020\037\042\042\043\046\023\050\033" +
    "\052\015\057\036\063\027\065\035\066\034\067\040\070" +
    "\030\071\016\073\032\001\002\000\004\014\u015b\001\002" +
    "\000\004\014\u0159\001\002\000\004\014\u015a\001\002\000" +
    "\004\002\ufffc\001\002\000\004\002\ufffe\001\002\000\004" +
    "\002\ufffa\001\002\000\004\006\uff92\001\002\000\006\007" +
    "\u015f\027\u0116\001\002\000\014\006\uff96\035\u0103\036\u0100" +
    "\037\u0107\042\u0102\001\002\000\004\006\uff9a\001\002\000" +
    "\006\007\u0163\027\u0116\001\002\000\004\006\uff8f\001\002" +
    "\000\014\006\uff93\035\u0103\036\u0100\037\u0107\042\u0102\001" +
    "\002\000\004\006\uff97\001\002\000\004\004\u0166\001\002" +
    "\000\004\011\u0167\001\002\000\004\012\u0168\001\002\000" +
    "\004\013\u0169\001\002\000\042\014\u016a\035\026\036\020" +
    "\037\042\042\043\046\023\050\033\052\015\057\036\063" +
    "\027\065\035\066\034\067\040\070\030\071\016\073\032" +
    "\001\002\000\004\014\uff9c\001\002\000\004\014\u016c\001" +
    "\002\000\004\014\uff9b\001\002\000\004\006\uff91\001\002" +
    "\000\006\007\u016f\027\u0116\001\002\000\014\006\uff95\035" +
    "\u0103\036\u0100\037\u0107\042\u0102\001\002\000\004\006\uff99" +
    "\001\002" });
=======
    "\000\u01ae\000\006\005\004\006\005\001\002\000\004\046" +
    "\347\001\002\000\004\004\010\001\002\000\004\002\007" +
    "\001\002\000\004\002\001\001\002\000\004\011\011\001" +
    "\002\000\004\012\012\001\002\000\004\013\013\001\002" +
    "\000\042\014\014\035\026\036\020\037\041\042\042\046" +
    "\023\050\033\052\015\057\036\063\027\065\035\066\034" +
    "\067\040\070\030\071\016\073\032\001\002\000\004\002" +
    "\uffff\001\002\000\004\011\271\001\002\000\004\011\260" +
    "\001\002\000\004\014\ufff7\001\002\000\004\046\255\001" +
    "\002\000\004\014\ufffa\001\002\000\004\014\253\001\002" +
    "\000\004\027\046\001\002\000\004\014\ufff6\001\002\000" +
    "\004\014\ufff9\001\002\000\004\046\250\001\002\000\004" +
    "\011\236\001\002\000\004\011\225\001\002\000\004\014" +
    "\ufff5\001\002\000\004\011\220\001\002\000\004\011\172" +
    "\001\002\000\004\011\161\001\002\000\004\011\150\001" +
    "\002\000\004\011\106\001\002\000\004\014\ufff8\001\002" +
    "\000\004\011\075\001\002\000\004\046\072\001\002\000" +
    "\004\046\044\001\002\000\004\014\uffe9\001\002\000\006" +
    "\007\045\027\046\001\002\000\042\014\uffed\035\026\036" +
    "\020\037\041\042\042\046\023\050\033\052\015\057\036" +
    "\063\027\065\035\066\034\067\040\070\030\071\016\073" +
    "\032\001\002\000\016\043\050\044\047\045\052\046\054" +
    "\055\053\056\051\001\002\000\004\007\066\001\002\000" +
    "\004\007\064\001\002\000\010\007\uffdd\012\uffdd\030\uffdd" +
    "\001\002\000\004\007\062\001\002\000\010\007\uffde\012" +
    "\uffde\030\uffde\001\002\000\004\007\060\001\002\000\004" +
    "\007\056\001\002\000\042\014\uffe0\035\026\036\020\037" +
    "\041\042\042\046\023\050\033\052\015\057\036\063\027" +
    "\065\035\066\034\067\040\070\030\071\016\073\032\001" +
    "\002\000\004\014\uffe5\001\002\000\042\014\uffdf\035\026" +
    "\036\020\037\041\042\042\046\023\050\033\052\015\057" +
    "\036\063\027\065\035\066\034\067\040\070\030\071\016" +
    "\073\032\001\002\000\004\014\uffe4\001\002\000\042\014" +
    "\uffe2\035\026\036\020\037\041\042\042\046\023\050\033" +
    "\052\015\057\036\063\027\065\035\066\034\067\040\070" +
    "\030\071\016\073\032\001\002\000\004\014\uffe7\001\002" +
    "\000\042\014\uffe3\035\026\036\020\037\041\042\042\046" +
    "\023\050\033\052\015\057\036\063\027\065\035\066\034" +
    "\067\040\070\030\071\016\073\032\001\002\000\004\014" +
    "\uffe8\001\002\000\042\014\uffe1\035\026\036\020\037\041" +
    "\042\042\046\023\050\033\052\015\057\036\063\027\065" +
    "\035\066\034\067\040\070\030\071\016\073\032\001\002" +
    "\000\004\014\uffe6\001\002\000\004\014\ufff1\001\002\000" +
    "\004\014\uffea\001\002\000\006\007\073\027\046\001\002" +
    "\000\042\014\uffee\035\026\036\020\037\041\042\042\046" +
    "\023\050\033\052\015\057\036\063\027\065\035\066\034" +
    "\067\040\070\030\071\016\073\032\001\002\000\004\014" +
    "\ufff2\001\002\000\006\055\077\056\076\001\002\000\004" +
    "\012\103\001\002\000\004\012\100\001\002\000\004\007" +
    "\101\001\002\000\042\014\uff6c\035\026\036\020\037\041" +
    "\042\042\046\023\050\033\052\015\057\036\063\027\065" +
    "\035\066\034\067\040\070\030\071\016\073\032\001\002" +
    "\000\004\014\uff79\001\002\000\004\007\104\001\002\000" +
    "\042\014\uff6b\035\026\036\020\037\041\042\042\046\023" +
    "\050\033\052\015\057\036\063\027\065\035\066\034\067" +
    "\040\070\030\071\016\073\032\001\002\000\004\014\uff78" +
    "\001\002\000\016\043\110\044\107\045\111\046\113\055" +
    "\053\056\051\001\002\000\004\031\146\001\002\000\006" +
    "\030\143\031\142\001\002\000\004\030\140\001\002\000" +
    "\004\012\131\001\002\000\006\030\120\031\117\001\002" +
    "\000\006\012\uffdc\030\115\001\002\000\004\046\116\001" +
    "\002\000\004\012\uffcf\001\002\000\010\043\126\044\127" +
    "\046\130\001\002\000\014\043\121\045\123\046\125\055" +
    "\124\056\122\001\002\000\004\012\uffd3\001\002\000\004" +
    "\012\uffd0\001\002\000\004\012\uffd6\001\002\000\004\012" +
    "\uffd1\001\002\000\004\012\uffd4\001\002\000\004\012\uffda" +
    "\001\002\000\004\012\uffd9\001\002\000\004\012\uffdb\001" +
    "\002\000\004\013\132\001\002\000\042\014\133\035\026" +
    "\036\020\037\041\042\042\046\023\050\033\052\015\057" +
    "\036\063\027\065\035\066\034\067\040\070\030\071\016" +
    "\073\032\001\002\000\042\014\uffb3\035\026\036\020\037" +
    "\041\042\042\046\023\050\033\052\015\057\036\063\027" +
    "\065\035\066\034\067\040\070\030\071\016\073\032\001" +
    "\002\000\004\014\135\001\002\000\042\014\uffb2\035\026" +
    "\036\020\037\041\042\042\046\023\050\033\052\015\057" +
    "\036\063\027\065\035\066\034\067\040\070\030\071\016" +
    "\073\032\001\002\000\004\014\uffb0\001\002\000\004\014" +
    "\uffb1\001\002\000\004\046\141\001\002\000\004\012\uffd5" +
    "\001\002\000\004\046\145\001\002\000\004\046\144\001" +
    "\002\000\004\012\uffd2\001\002\000\004\012\uffd8\001\002" +
    "\000\004\046\147\001\002\000\004\012\uffd7\001\002\000" +
    "\006\055\152\056\151\001\002\000\004\012\156\001\002" +
    "\000\004\012\153\001\002\000\004\007\154\001\002\000" +
    "\042\014\uff72\035\026\036\020\037\041\042\042\046\023" +
    "\050\033\052\015\057\036\063\027\065\035\066\034\067" +
    "\040\070\030\071\016\073\032\001\002\000\004\014\uff7f" +
    "\001\002\000\004\007\157\001\002\000\042\014\uff71\035" +
    "\026\036\020\037\041\042\042\046\023\050\033\052\015" +
    "\057\036\063\027\065\035\066\034\067\040\070\030\071" +
    "\016\073\032\001\002\000\004\014\uff7e\001\002\000\006" +
    "\055\163\056\162\001\002\000\004\012\167\001\002\000" +
    "\004\012\164\001\002\000\004\007\165\001\002\000\042" +
    "\014\uff6a\035\026\036\020\037\041\042\042\046\023\050" +
    "\033\052\015\057\036\063\027\065\035\066\034\067\040" +
    "\070\030\071\016\073\032\001\002\000\004\014\uff77\001" +
    "\002\000\004\007\170\001\002\000\042\014\uff69\035\026" +
    "\036\020\037\041\042\042\046\023\050\033\052\015\057" +
    "\036\063\027\065\035\066\034\067\040\070\030\071\016" +
    "\073\032\001\002\000\004\014\uff76\001\002\000\016\043" +
    "\110\044\107\045\111\046\113\055\053\056\051\001\002" +
    "\000\004\012\174\001\002\000\004\013\175\001\002\000" +
    "\042\014\176\035\026\036\020\037\041\042\042\046\023" +
    "\050\033\052\015\057\036\063\027\065\035\066\034\067" +
    "\040\070\030\071\016\073\032\001\002\000\044\014\uffcb" +
    "\035\026\036\020\037\041\042\042\046\023\050\033\051" +
    "\211\052\015\057\036\063\027\065\035\066\034\067\040" +
    "\070\030\071\016\073\032\001\002\000\004\014\200\001" +
    "\002\000\044\014\uffcd\035\026\036\020\037\041\042\042" +
    "\046\023\050\033\051\201\052\015\057\036\063\027\065" +
    "\035\066\034\067\040\070\030\071\016\073\032\001\002" +
    "\000\004\013\203\001\002\000\004\014\uffce\001\002\000" +
    "\042\014\204\035\026\036\020\037\041\042\042\046\023" +
    "\050\033\052\015\057\036\063\027\065\035\066\034\067" +
    "\040\070\030\071\016\073\032\001\002\000\042\014\uffc9" +
    "\035\026\036\020\037\041\042\042\046\023\050\033\052" +
    "\015\057\036\063\027\065\035\066\034\067\040\070\030" +
    "\071\016\073\032\001\002\000\004\014\206\001\002\000" +
    "\042\014\uffc7\035\026\036\020\037\041\042\042\046\023" +
    "\050\033\052\015\057\036\063\027\065\035\066\034\067" +
    "\040\070\030\071\016\073\032\001\002\000\004\014\uffc5" +
    "\001\002\000\004\014\uffc8\001\002\000\004\013\213\001" +
    "\002\000\004\014\uffcc\001\002\000\042\014\214\035\026" +
    "\036\020\037\041\042\042\046\023\050\033\052\015\057" +
    "\036\063\027\065\035\066\034\067\040\070\030\071\016" +
    "\073\032\001\002\000\004\014\uffca\001\002\000\004\014" +
    "\216\001\002\000\042\014\uffc6\035\026\036\020\037\041" +
    "\042\042\046\023\050\033\052\015\057\036\063\027\065" +
    "\035\066\034\067\040\070\030\071\016\073\032\001\002" +
    "\000\004\014\uffc4\001\002\000\004\043\221\001\002\000" +
    "\004\012\222\001\002\000\004\007\223\001\002\000\042" +
    "\014\uff68\035\026\036\020\037\041\042\042\046\023\050" +
    "\033\052\015\057\036\063\027\065\035\066\034\067\040" +
    "\070\030\071\016\073\032\001\002\000\004\014\uff75\001" +
    "\002\000\006\055\227\056\226\001\002\000\004\012\233" +
    "\001\002\000\004\012\230\001\002\000\004\007\231\001" +
    "\002\000\042\014\uff70\035\026\036\020\037\041\042\042" +
    "\046\023\050\033\052\015\057\036\063\027\065\035\066" +
    "\034\067\040\070\030\071\016\073\032\001\002\000\004" +
    "\014\uff7d\001\002\000\004\007\234\001\002\000\042\014" +
    "\uff6f\035\026\036\020\037\041\042\042\046\023\050\033" +
    "\052\015\057\036\063\027\065\035\066\034\067\040\070" +
    "\030\071\016\073\032\001\002\000\004\014\uff7c\001\002" +
    "\000\006\055\240\056\237\001\002\000\004\012\244\001" +
    "\002\000\004\012\241\001\002\000\004\007\242\001\002" +
    "\000\042\014\uff74\035\026\036\020\037\041\042\042\046" +
    "\023\050\033\052\015\057\036\063\027\065\035\066\034" +
    "\067\040\070\030\071\016\073\032\001\002\000\004\014" +
    "\uff81\001\002\000\004\007\245\001\002\000\042\014\uff73" +
    "\035\026\036\020\037\041\042\042\046\023\050\033\052" +
    "\015\057\036\063\027\065\035\066\034\067\040\070\030" +
    "\071\016\073\032\001\002\000\004\014\uff80\001\002\000" +
    "\004\014\uffec\001\002\000\006\007\251\027\046\001\002" +
    "\000\042\014\ufff0\035\026\036\020\037\041\042\042\046" +
    "\023\050\033\052\015\057\036\063\027\065\035\066\034" +
    "\067\040\070\030\071\016\073\032\001\002\000\004\014" +
    "\ufff4\001\002\000\004\002\ufffd\001\002\000\004\014\uffeb" +
    "\001\002\000\006\007\256\027\046\001\002\000\042\014" +
    "\uffef\035\026\036\020\037\041\042\042\046\023\050\033" +
    "\052\015\057\036\063\027\065\035\066\034\067\040\070" +
    "\030\071\016\073\032\001\002\000\004\014\ufff3\001\002" +
    "\000\006\055\262\056\261\001\002\000\004\012\266\001" +
    "\002\000\004\012\263\001\002\000\004\007\264\001\002" +
    "\000\042\014\uff6e\035\026\036\020\037\041\042\042\046" +
    "\023\050\033\052\015\057\036\063\027\065\035\066\034" +
    "\067\040\070\030\071\016\073\032\001\002\000\004\014" +
    "\uff7b\001\002\000\004\007\267\001\002\000\042\014\uff6d" +
    "\035\026\036\020\037\041\042\042\046\023\050\033\052" +
    "\015\057\036\063\027\065\035\066\034\067\040\070\030" +
    "\071\016\073\032\001\002\000\004\014\uff7a\001\002\000" +
    "\004\035\272\001\002\000\004\046\273\001\002\000\004" +
    "\027\274\001\002\000\004\043\275\001\002\000\004\007" +
    "\276\001\002\000\004\046\277\001\002\000\004\031\300" +
    "\001\002\000\006\043\301\046\302\001\002\000\004\007" +
    "\325\001\002\000\004\007\303\001\002\000\004\046\304" +
    "\001\002\000\006\032\305\033\306\001\002\000\004\012" +
    "\316\001\002\000\004\012\307\001\002\000\004\013\310" +
    "\001\002\000\042\014\311\035\026\036\020\037\041\042" +
    "\042\046\023\050\033\052\015\057\036\063\027\065\035" +
    "\066\034\067\040\070\030\071\016\073\032\001\002\000" +
    "\042\014\uffb5\035\026\036\020\037\041\042\042\046\023" +
    "\050\033\052\015\057\036\063\027\065\035\066\034\067" +
    "\040\070\030\071\016\073\032\001\002\000\004\014\313" +
    "\001\002\000\042\014\uffb6\035\026\036\020\037\041\042" +
    "\042\046\023\050\033\052\015\057\036\063\027\065\035" +
    "\066\034\067\040\070\030\071\016\073\032\001\002\000" +
    "\004\014\uffb7\001\002\000\004\014\uffb4\001\002\000\004" +
    "\013\317\001\002\000\042\014\320\035\026\036\020\037" +
    "\041\042\042\046\023\050\033\052\015\057\036\063\027" +
    "\065\035\066\034\067\040\070\030\071\016\073\032\001" +
    "\002\000\042\014\uffbd\035\026\036\020\037\041\042\042" +
    "\046\023\050\033\052\015\057\036\063\027\065\035\066" +
    "\034\067\040\070\030\071\016\073\032\001\002\000\004" +
    "\014\322\001\002\000\042\014\uffbe\035\026\036\020\037" +
    "\041\042\042\046\023\050\033\052\015\057\036\063\027" +
    "\065\035\066\034\067\040\070\030\071\016\073\032\001" +
    "\002\000\004\014\uffbf\001\002\000\004\014\uffbc\001\002" +
    "\000\004\046\326\001\002\000\006\032\327\033\330\001" +
    "\002\000\004\012\340\001\002\000\004\012\331\001\002" +
    "\000\004\013\332\001\002\000\042\014\333\035\026\036" +
    "\020\037\041\042\042\046\023\050\033\052\015\057\036" +
    "\063\027\065\035\066\034\067\040\070\030\071\016\073" +
    "\032\001\002\000\042\014\uffb9\035\026\036\020\037\041" +
    "\042\042\046\023\050\033\052\015\057\036\063\027\065" +
    "\035\066\034\067\040\070\030\071\016\073\032\001\002" +
    "\000\004\014\335\001\002\000\042\014\uffba\035\026\036" +
    "\020\037\041\042\042\046\023\050\033\052\015\057\036" +
    "\063\027\065\035\066\034\067\040\070\030\071\016\073" +
    "\032\001\002\000\004\014\uffbb\001\002\000\004\014\uffb8" +
    "\001\002\000\004\013\341\001\002\000\042\014\342\035" +
    "\026\036\020\037\041\042\042\046\023\050\033\052\015" +
    "\057\036\063\027\065\035\066\034\067\040\070\030\071" +
    "\016\073\032\001\002\000\042\014\uffc1\035\026\036\020" +
    "\037\041\042\042\046\023\050\033\052\015\057\036\063" +
    "\027\065\035\066\034\067\040\070\030\071\016\073\032" +
    "\001\002\000\004\014\344\001\002\000\042\014\uffc2\035" +
    "\026\036\020\037\041\042\042\046\023\050\033\052\015" +
    "\057\036\063\027\065\035\066\034\067\040\070\030\071" +
    "\016\073\032\001\002\000\004\014\uffc3\001\002\000\004" +
    "\014\uffc0\001\002\000\004\013\350\001\002\000\016\006" +
    "\354\014\356\035\355\036\353\037\352\042\357\001\002" +
    "\000\004\014\u01b0\001\002\000\004\046\u018b\001\002\000" +
    "\004\046\u0166\001\002\000\004\004\u015d\001\002\000\004" +
    "\046\u0138\001\002\000\004\002\000\001\002\000\004\046" +
    "\360\001\002\000\006\007\361\027\362\001\002\000\014" +
    "\006\u012a\035\371\036\367\037\365\042\372\001\002\000" +
    "\006\055\053\056\051\001\002\000\004\007\364\001\002" +
    "\000\014\006\370\035\371\036\367\037\365\042\372\001" +
    "\002\000\004\046\u0122\001\002\000\004\006\u011a\001\002" +
    "\000\004\046\u0113\001\002\000\004\004\u010c\001\002\000" +
    "\004\046\u0105\001\002\000\004\046\373\001\002\000\006" +
    "\007\374\027\375\001\002\000\014\006\uff8c\035\371\036" +
    "\367\037\365\042\372\001\002\000\006\055\377\056\376" +
    "\001\002\000\004\007\u0102\001\002\000\004\007\u0100\001" +
    "\002\000\014\006\uff83\035\371\036\367\037\365\042\372" +
    "\001\002\000\004\006\uff88\001\002\000\014\006\uff82\035" +
    "\371\036\367\037\365\042\372\001\002\000\004\006\uff87" +
    "\001\002\000\004\006\uff90\001\002\000\006\007\u0106\027" +
    "\u0107\001\002\000\014\006\uff8f\035\371\036\367\037\365" +
    "\042\372\001\002\000\004\043\u0108\001\002\000\004\007" +
    "\u0109\001\002\000\014\006\uff86\035\371\036\367\037\365" +
    "\042\372\001\002\000\004\006\uff8b\001\002\000\004\006" +
    "\uff93\001\002\000\004\011\u010d\001\002\000\004\012\u010e" +
    "\001\002\000\004\013\u010f\001\002\000\042\014\u0110\035" +
    "\026\036\020\037\041\042\042\046\023\050\033\052\015" +
    "\057\036\063\027\065\035\066\034\067\040\070\030\071" +
    "\016\073\032\001\002\000\004\014\uff95\001\002\000\004" +
    "\014\u0112\001\002\000\004\014\uff94\001\002\000\006\007" +
    "\u0114\027\u0115\001\002\000\014\006\uff8e\035\371\036\367" +
    "\037\365\042\372\001\002\000\004\044\u0116\001\002\000" +
    "\004\007\u0117\001\002\000\014\006\uff85\035\371\036\367" +
    "\037\365\042\372\001\002\000\004\006\uff8a\001\002\000" +
    "\004\006\uff92\001\002\000\004\004\u011b\001\002\000\004" +
    "\011\u011c\001\002\000\004\012\u011d\001\002\000\004\013" +
    "\u011e\001\002\000\042\014\u011f\035\026\036\020\037\041" +
    "\042\042\046\023\050\033\052\015\057\036\063\027\065" +
    "\035\066\034\067\040\070\030\071\016\073\032\001\002" +
    "\000\004\014\uff96\001\002\000\004\014\u0121\001\002\000" +
    "\004\014\uff97\001\002\000\006\007\u0123\027\u0124\001\002" +
    "\000\014\006\uff8d\035\371\036\367\037\365\042\372\001" +
    "\002\000\004\045\u0125\001\002\000\004\007\u0126\001\002" +
    "\000\014\006\uff84\035\371\036\367\037\365\042\372\001" +
    "\002\000\004\006\uff89\001\002\000\004\006\uff91\001\002" +
    "\000\004\006\u0130\001\002\000\004\004\u012b\001\002\000" +
    "\004\011\u012c\001\002\000\004\012\u012d\001\002\000\004" +
    "\013\u012e\001\002\000\004\014\u012f\001\002\000\004\014" +
    "\uffa5\001\002\000\004\004\u0131\001\002\000\004\011\u0132" +
    "\001\002\000\004\012\u0133\001\002\000\004\013\u0134\001" +
    "\002\000\042\014\u0135\035\026\036\020\037\041\042\042" +
    "\046\023\050\033\052\015\057\036\063\027\065\035\066" +
    "\034\067\040\070\030\071\016\073\032\001\002\000\004" +
    "\014\uffa4\001\002\000\004\014\u0137\001\002\000\004\014" +
    "\uffa6\001\002\000\006\007\u0139\027\u013a\001\002\000\014" +
    "\006\u014f\035\371\036\367\037\365\042\372\001\002\000" +
    "\004\043\u013b\001\002\000\004\007\u013c\001\002\000\014" +
    "\006\u013e\035\371\036\367\037\365\042\372\001\002\000" +
    "\004\006\u0146\001\002\000\004\004\u013f\001\002\000\004" +
    "\011\u0140\001\002\000\004\012\u0141\001\002\000\004\013" +
    "\u0142\001\002\000\042\014\u0143\035\026\036\020\037\041" +
    "\042\042\046\023\050\033\052\015\057\036\063\027\065" +
    "\035\066\034\067\040\070\030\071\016\073\032\001\002" +
    "\000\004\014\uffa1\001\002\000\004\014\u0145\001\002\000" +
    "\004\014\uffa0\001\002\000\004\004\u0147\001\002\000\004" +
    "\011\u0148\001\002\000\004\012\u0149\001\002\000\004\013" +
    "\u014a\001\002\000\042\014\u014b\035\026\036\020\037\041" +
    "\042\042\046\023\050\033\052\015\057\036\063\027\065" +
    "\035\066\034\067\040\070\030\071\016\073\032\001\002" +
    "\000\004\014\uffa2\001\002\000\004\014\u014d\001\002\000" +
    "\004\014\uffa3\001\002\000\004\006\u0155\001\002\000\004" +
    "\004\u0150\001\002\000\004\011\u0151\001\002\000\004\012" +
    "\u0152\001\002\000\004\013\u0153\001\002\000\004\014\u0154" +
    "\001\002\000\004\014\uffad\001\002\000\004\004\u0156\001" +
    "\002\000\004\011\u0157\001\002\000\004\012\u0158\001\002" +
    "\000\004\013\u0159\001\002\000\042\014\u015a\035\026\036" +
    "\020\037\041\042\042\046\023\050\033\052\015\057\036" +
    "\063\027\065\035\066\034\067\040\070\030\071\016\073" +
    "\032\001\002\000\004\014\uffae\001\002\000\004\014\u015c" +
    "\001\002\000\004\014\uffaf\001\002\000\004\011\u015e\001" +
    "\002\000\004\012\u015f\001\002\000\004\013\u0160\001\002" +
    "\000\042\014\u0161\035\026\036\020\037\041\042\042\046" +
    "\023\050\033\052\015\057\036\063\027\065\035\066\034" +
    "\067\040\070\030\071\016\073\032\001\002\000\004\014" +
    "\u0165\001\002\000\004\014\u0163\001\002\000\004\014\u0164" +
    "\001\002\000\004\002\ufffc\001\002\000\004\002\ufffe\001" +
    "\002\000\006\007\u0167\027\u0168\001\002\000\014\006\u017d" +
    "\035\371\036\367\037\365\042\372\001\002\000\004\044" +
    "\u0169\001\002\000\004\007\u016a\001\002\000\014\006\u016c" +
    "\035\371\036\367\037\365\042\372\001\002\000\004\006" +
    "\u0174\001\002\000\004\004\u016d\001\002\000\004\011\u016e" +
    "\001\002\000\004\012\u016f\001\002\000\004\013\u0170\001" +
    "\002\000\042\014\u0171\035\026\036\020\037\041\042\042" +
    "\046\023\050\033\052\015\057\036\063\027\065\035\066" +
    "\034\067\040\070\030\071\016\073\032\001\002\000\004" +
    "\014\uff9d\001\002\000\004\014\u0173\001\002\000\004\014" +
    "\uff9c\001\002\000\004\004\u0175\001\002\000\004\011\u0176" +
    "\001\002\000\004\012\u0177\001\002\000\004\013\u0178\001" +
    "\002\000\042\014\u0179\035\026\036\020\037\041\042\042" +
    "\046\023\050\033\052\015\057\036\063\027\065\035\066" +
    "\034\067\040\070\030\071\016\073\032\001\002\000\004" +
    "\014\uff9e\001\002\000\004\014\u017b\001\002\000\004\014" +
    "\uff9f\001\002\000\004\006\u0183\001\002\000\004\004\u017e" +
    "\001\002\000\004\011\u017f\001\002\000\004\012\u0180\001" +
    "\002\000\004\013\u0181\001\002\000\004\014\u0182\001\002" +
    "\000\004\014\uffab\001\002\000\004\004\u0184\001\002\000" +
    "\004\011\u0185\001\002\000\004\012\u0186\001\002\000\004" +
    "\013\u0187\001\002\000\042\014\u0188\035\026\036\020\037" +
    "\041\042\042\046\023\050\033\052\015\057\036\063\027" +
    "\065\035\066\034\067\040\070\030\071\016\073\032\001" +
    "\002\000\004\014\uffaa\001\002\000\004\014\u018a\001\002" +
    "\000\004\014\uffac\001\002\000\006\007\u018c\027\u018d\001" +
    "\002\000\014\006\u01a2\035\371\036\367\037\365\042\372" +
    "\001\002\000\004\045\u018e\001\002\000\004\007\u018f\001" +
    "\002\000\014\006\u0191\035\371\036\367\037\365\042\372" +
    "\001\002\000\004\006\u0199\001\002\000\004\004\u0192\001" +
    "\002\000\004\011\u0193\001\002\000\004\012\u0194\001\002" +
    "\000\004\013\u0195\001\002\000\042\014\u0196\035\026\036" +
    "\020\037\041\042\042\046\023\050\033\052\015\057\036" +
    "\063\027\065\035\066\034\067\040\070\030\071\016\073" +
    "\032\001\002\000\004\014\uff99\001\002\000\004\014\u0198" +
    "\001\002\000\004\014\uff98\001\002\000\004\004\u019a\001" +
    "\002\000\004\011\u019b\001\002\000\004\012\u019c\001\002" +
    "\000\004\013\u019d\001\002\000\042\014\u019e\035\026\036" +
    "\020\037\041\042\042\046\023\050\033\052\015\057\036" +
    "\063\027\065\035\066\034\067\040\070\030\071\016\073" +
    "\032\001\002\000\004\014\uff9a\001\002\000\004\014\u01a0" +
    "\001\002\000\004\014\uff9b\001\002\000\004\006\u01a8\001" +
    "\002\000\004\004\u01a3\001\002\000\004\011\u01a4\001\002" +
    "\000\004\012\u01a5\001\002\000\004\013\u01a6\001\002\000" +
    "\004\014\u01a7\001\002\000\004\014\uffa8\001\002\000\004" +
    "\004\u01a9\001\002\000\004\011\u01aa\001\002\000\004\012" +
    "\u01ab\001\002\000\004\013\u01ac\001\002\000\042\014\u01ad" +
    "\035\026\036\020\037\041\042\042\046\023\050\033\052" +
    "\015\057\036\063\027\065\035\066\034\067\040\070\030" +
    "\071\016\073\032\001\002\000\004\014\uffa7\001\002\000" +
    "\004\014\u01af\001\002\000\004\014\uffa9\001\002\000\004" +
    "\002\ufffb\001\002" });
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
<<<<<<< HEAD
    "\000\u016e\000\004\002\005\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\022\003" +
    "\021\004\020\007\024\010\036\011\016\014\023\016\030" +
    "\021\040\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\016\305\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\016\274\001\001" +
=======
    "\000\u01ae\000\004\002\005\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\020\003" +
    "\021\004\020\005\030\010\024\011\036\012\016\015\023" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\005\253\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\005\246\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\005\070\001\001\000\004\005\042\001\001\000\002" +
    "\001\001\000\002\001\001\000\020\003\067\004\020\005" +
    "\030\010\024\011\036\012\016\015\023\001\001\000\004" +
    "\006\054\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
<<<<<<< HEAD
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\016\110\001\001\000\004" +
    "\016\043\001\001\000\002\001\001\000\002\001\001\000" +
    "\022\003\107\004\020\007\024\010\036\011\016\014\023" +
    "\016\030\021\040\001\001\000\004\006\051\001\001\000" +
=======
    "\001\001\000\002\001\001\000\020\003\056\004\020\005" +
    "\030\010\024\011\036\012\016\015\023\001\001\000\002" +
    "\001\001\000\020\003\060\004\020\005\030\010\024\011" +
    "\036\012\016\015\023\001\001\000\002\001\001\000\020" +
    "\003\062\004\020\005\030\010\024\011\036\012\016\015" +
    "\023\001\001\000\002\001\001\000\020\003\064\004\020" +
    "\005\030\010\024\011\036\012\016\015\023\001\001\000" +
    "\002\001\001\000\020\003\066\004\020\005\030\010\024" +
    "\011\036\012\016\015\023\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\020" +
    "\003\073\004\020\005\030\010\024\011\036\012\016\015" +
    "\023\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\020\003" +
    "\101\004\020\005\030\010\024\011\036\012\016\015\023" +
    "\001\001\000\002\001\001\000\002\001\001\000\020\003" +
    "\104\004\020\005\030\010\024\011\036\012\016\015\023" +
    "\001\001\000\002\001\001\000\006\006\113\007\111\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\022\003\062\004\020\007\024\010\036\011\016\014" +
    "\023\016\030\021\040\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\022\003\066\004\020\007" +
    "\024\010\036\011\016\014\023\016\030\021\040\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
<<<<<<< HEAD
    "\022\003\072\004\020\007\024\010\036\011\016\014\023" +
    "\016\030\021\040\001\001\000\002\001\001\000\022\003" +
    "\074\004\020\007\024\010\036\011\016\014\023\016\030" +
    "\021\040\001\001\000\002\001\001\000\022\003\076\004" +
    "\020\007\024\010\036\011\016\014\023\016\030\021\040" +
    "\001\001\000\002\001\001\000\022\003\100\004\020\007" +
    "\024\010\036\011\016\014\023\016\030\021\040\001\001" +
=======
    "\020\003\133\004\020\005\030\010\024\011\036\012\016" +
    "\015\023\001\001\000\020\003\136\004\020\005\030\010" +
    "\024\011\036\012\016\015\023\001\001\000\002\001\001" +
    "\000\020\003\135\004\020\005\030\010\024\011\036\012" +
    "\016\015\023\001\001\000\002\001\001\000\002\001\001" +
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\022\003\104\004\020\007\024\010\036\011\016\014\023" +
    "\016\030\021\040\001\001\000\002\001\001\000\022\003" +
    "\106\004\020\007\024\010\036\011\016\014\023\016\030" +
    "\021\040\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\022\003\113\004\020" +
    "\007\024\010\036\011\016\014\023\016\030\021\040\001" +
    "\001\000\002\001\001\000\004\006\115\001\001\000\002" +
    "\001\001\000\002\001\001\000\022\003\120\004\020\007" +
    "\024\010\036\011\016\014\023\016\030\021\040\001\001" +
    "\000\002\001\001\000\006\005\125\006\127\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
<<<<<<< HEAD
    "\001\000\004\006\135\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\022\003\144\004\020\007\024\010\036\011\016\014" +
    "\023\016\030\021\040\001\001\000\022\003\147\004\020" +
    "\007\024\010\036\011\016\014\023\016\030\021\040\001" +
    "\001\000\002\001\001\000\022\003\146\004\020\007\024" +
    "\010\036\011\016\014\023\016\030\021\040\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
=======
    "\001\000\002\001\001\000\002\001\001\000\020\003\154" +
    "\004\020\005\030\010\024\011\036\012\016\015\023\001" +
    "\001\000\002\001\001\000\002\001\001\000\020\003\157" +
    "\004\020\005\030\010\024\011\036\012\016\015\023\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\020\003\165\004" +
    "\020\005\030\010\024\011\036\012\016\015\023\001\001" +
    "\000\002\001\001\000\002\001\001\000\020\003\170\004" +
    "\020\005\030\010\024\011\036\012\016\015\023\001\001" +
    "\000\002\001\001\000\006\006\113\007\172\001\001\000" +
    "\002\001\001\000\002\001\001\000\020\003\176\004\020" +
    "\005\030\010\024\011\036\012\016\015\023\001\001\000" +
    "\020\003\211\004\020\005\030\010\024\011\036\012\016" +
    "\015\023\001\001\000\002\001\001\000\020\003\201\004" +
    "\020\005\030\010\024\011\036\012\016\015\023\001\001" +
    "\000\002\001\001\000\002\001\001\000\020\003\204\004" +
    "\020\005\030\010\024\011\036\012\016\015\023\001\001" +
    "\000\020\003\207\004\020\005\030\010\024\011\036\012" +
    "\016\015\023\001\001\000\002\001\001\000\020\003\206" +
    "\004\020\005\030\010\024\011\036\012\016\015\023\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\020\003\214\004\020\005\030\010" +
    "\024\011\036\012\016\015\023\001\001\000\002\001\001" +
    "\000\002\001\001\000\020\003\216\004\020\005\030\010" +
    "\024\011\036\012\016\015\023\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\020\003\223\004\020\005\030\010\024\011\036\012\016" +
    "\015\023\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\020" +
    "\003\231\004\020\005\030\010\024\011\036\012\016\015" +
    "\023\001\001\000\002\001\001\000\002\001\001\000\020" +
    "\003\234\004\020\005\030\010\024\011\036\012\016\015" +
    "\023\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\020\003" +
    "\242\004\020\005\030\010\024\011\036\012\016\015\023" +
    "\001\001\000\002\001\001\000\002\001\001\000\020\003" +
    "\245\004\020\005\030\010\024\011\036\012\016\015\023" +
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\020\003\251\004\020\005\030\010\024\011\036" +
    "\012\016\015\023\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\020\003\256" +
    "\004\020\005\030\010\024\011\036\012\016\015\023\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
<<<<<<< HEAD
    "\000\004\006\161\001\001\000\002\001\001\000\002\001" +
    "\001\000\022\003\164\004\020\007\024\010\036\011\016" +
    "\014\023\016\030\021\040\001\001\000\002\001\001\000" +
    "\004\006\166\001\001\000\002\001\001\000\002\001\001" +
    "\000\022\003\171\004\020\007\024\010\036\011\016\014" +
    "\023\016\030\021\040\001\001\000\002\001\001\000\010" +
    "\005\175\006\127\017\174\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\005\225\006\127" +
    "\001\001\000\002\001\001\000\006\005\201\006\127\001" +
    "\001\000\002\001\001\000\022\003\204\004\020\007\024" +
    "\010\036\011\016\014\023\016\030\021\040\001\001\000" +
    "\022\003\217\004\020\007\024\010\036\011\016\014\023" +
    "\016\030\021\040\001\001\000\002\001\001\000\022\003" +
    "\207\004\020\007\024\010\036\011\016\014\023\016\030" +
    "\021\040\001\001\000\002\001\001\000\002\001\001\000" +
    "\022\003\212\004\020\007\024\010\036\011\016\014\023" +
    "\016\030\021\040\001\001\000\022\003\215\004\020\007" +
    "\024\010\036\011\016\014\023\016\030\021\040\001\001" +
    "\000\002\001\001\000\022\003\214\004\020\007\024\010" +
    "\036\011\016\014\023\016\030\021\040\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\022\003\222\004\020\007\024\010\036\011\016" +
    "\014\023\016\030\021\040\001\001\000\002\001\001\000" +
    "\002\001\001\000\022\003\224\004\020\007\024\010\036" +
    "\011\016\014\023\016\030\021\040\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\022\003\231" +
    "\004\020\007\024\010\036\011\016\014\023\016\030\021" +
    "\040\001\001\000\022\003\244\004\020\007\024\010\036" +
    "\011\016\014\023\016\030\021\040\001\001\000\002\001" +
    "\001\000\022\003\234\004\020\007\024\010\036\011\016" +
    "\014\023\016\030\021\040\001\001\000\002\001\001\000" +
    "\002\001\001\000\022\003\237\004\020\007\024\010\036" +
    "\011\016\014\023\016\030\021\040\001\001\000\022\003" +
    "\242\004\020\007\024\010\036\011\016\014\023\016\030" +
    "\021\040\001\001\000\002\001\001\000\022\003\241\004" +
    "\020\007\024\010\036\011\016\014\023\016\030\021\040" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\022\003\247\004\020\007\024" +
    "\010\036\011\016\014\023\016\030\021\040\001\001\000" +
    "\002\001\001\000\002\001\001\000\022\003\251\004\020" +
    "\007\024\010\036\011\016\014\023\016\030\021\040\001" +
    "\001\000\002\001\001\000\006\005\253\006\127\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\022\003\261\004\020" +
    "\007\024\010\036\011\016\014\023\016\030\021\040\001" +
    "\001\000\002\001\001\000\004\006\263\001\001\000\002" +
    "\001\001\000\002\001\001\000\022\003\266\004\020\007" +
    "\024\010\036\011\016\014\023\016\030\021\040\001\001" +
    "\000\002\001\001\000\004\006\270\001\001\000\002\001" +
    "\001\000\002\001\001\000\022\003\273\004\020\007\024" +
    "\010\036\011\016\014\023\016\030\021\040\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\022" +
    "\003\277\004\020\007\024\010\036\011\016\014\023\016" +
    "\030\021\040\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\022\003\303\004\020\007\024\010" +
    "\036\011\016\014\023\016\030\021\040\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\022\003\310\004\020\007\024\010\036\011\016" +
    "\014\023\016\030\021\040\001\001\000\002\001\001\000" +
    "\004\006\312\001\001\000\002\001\001\000\002\001\001" +
    "\000\022\003\315\004\020\007\024\010\036\011\016\014" +
    "\023\016\030\021\040\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\022\003\337\004\020\007" +
    "\024\010\036\011\016\014\023\016\030\021\040\001\001" +
    "\000\022\003\342\004\020\007\024\010\036\011\016\014" +
    "\023\016\030\021\040\001\001\000\002\001\001\000\022" +
    "\003\341\004\020\007\024\010\036\011\016\014\023\016" +
    "\030\021\040\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\022\003\346\004\020\007\024\010" +
    "\036\011\016\014\023\016\030\021\040\001\001\000\022" +
    "\003\351\004\020\007\024\010\036\011\016\014\023\016" +
    "\030\021\040\001\001\000\002\001\001\000\022\003\350" +
    "\004\020\007\024\010\036\011\016\014\023\016\030\021" +
    "\040\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\022\003\361\004\020\007\024" +
    "\010\036\011\016\014\023\016\030\021\040\001\001\000" +
    "\022\003\364\004\020\007\024\010\036\011\016\014\023" +
    "\016\030\021\040\001\001\000\002\001\001\000\022\003" +
    "\363\004\020\007\024\010\036\011\016\014\023\016\030" +
    "\021\040\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\022\003\370\004\020\007\024\010\036" +
    "\011\016\014\023\016\030\021\040\001\001\000\022\003" +
    "\373\004\020\007\024\010\036\011\016\014\023\016\030" +
    "\021\040\001\001\000\002\001\001\000\022\003\372\004" +
    "\020\007\024\010\036\011\016\014\023\016\030\021\040" +
=======
    "\000\002\001\001\000\002\001\001\000\020\003\264\004" +
    "\020\005\030\010\024\011\036\012\016\015\023\001\001" +
    "\000\002\001\001\000\002\001\001\000\020\003\267\004" +
    "\020\005\030\010\024\011\036\012\016\015\023\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\020\003\311\004\020\005\030\010\024\011\036\012\016" +
    "\015\023\001\001\000\020\003\314\004\020\005\030\010" +
    "\024\011\036\012\016\015\023\001\001\000\002\001\001" +
    "\000\020\003\313\004\020\005\030\010\024\011\036\012" +
    "\016\015\023\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\020\003\320\004\020\005\030\010" +
    "\024\011\036\012\016\015\023\001\001\000\020\003\323" +
    "\004\020\005\030\010\024\011\036\012\016\015\023\001" +
    "\001\000\002\001\001\000\020\003\322\004\020\005\030" +
    "\010\024\011\036\012\016\015\023\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\020\003\333\004\020\005\030\010\024\011\036\012\016" +
    "\015\023\001\001\000\020\003\336\004\020\005\030\010" +
    "\024\011\036\012\016\015\023\001\001\000\002\001\001" +
    "\000\020\003\335\004\020\005\030\010\024\011\036\012" +
    "\016\015\023\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\020\003\342\004\020\005\030\010" +
    "\024\011\036\012\016\015\023\001\001\000\020\003\345" +
    "\004\020\005\030\010\024\011\036\012\016\015\023\001" +
    "\001\000\002\001\001\000\020\003\344\004\020\005\030" +
    "\010\024\011\036\012\016\015\023\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\013\350" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\014\u0128\001" +
    "\001\000\004\006\362\001\001\000\002\001\001\000\004" +
    "\014\365\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\014\u0103\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\014\u0100\001\001\000\002\001\001\000\004\014\u0102\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\014\u010a\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\014\u0109\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\020\003\u0110\004\020\005\030\010\024\011\036" +
    "\012\016\015\023\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\014\u0118" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\014" +
    "\u0117\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\020\003\u011f\004\020\005\030\010\024\011\036" +
    "\012\016\015\023\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\014\u0127" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\014" +
    "\u0126\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\020\003\u0135\004\020\005\030\010\024" +
    "\011\036\012\016\015\023\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\014\u014d\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\014\u013c\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\020\003\u0143\004\020\005\030\010\024\011\036\012\016" +
    "\015\023\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\020\003\u014b\004\020\005" +
    "\030\010\024\011\036\012\016\015\023\001\001\000\002" +
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\012\012\u0108\013\u0107\015\u0100\020\u0103\001\001" +
    "\000\002\001\001\000\004\015\u016c\001\001\000\002\001" +
    "\001\000\004\015\u0161\001\001\000\004\015\u015c\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\015\u0112\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\022\003\u0110\004\020" +
    "\007\024\010\036\011\016\014\023\016\030\021\040\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
<<<<<<< HEAD
    "\000\002\001\001\000\002\001\001\000\004\013\u0138\001" +
    "\001\000\004\006\u0118\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\013\u011e" +
    "\015\u011f\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\013\u0123\015\u0124" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\013\u0128\015\u0129\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\013\u012b\015" +
    "\u012c\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\013\u012e\015\u012f\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\013\u0133" +
    "\015\u0134\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\013\u0136\015\u0137\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\022\003\u013f" +
    "\004\020\007\024\010\036\011\016\014\023\016\030\021" +
    "\040\001\001\000\004\020\u014a\001\001\000\002\001\001" +
    "\000\004\020\u0141\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\022\003\u0148\004\020\007\024\010\036\011\016\014" +
    "\023\016\030\021\040\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\022\003\u0151\004\020\007\024\010\036\011\016\014" +
    "\023\016\030\021\040\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\022\003\u0157\004\020\007\024\010\036\011\016" +
    "\014\023\016\030\021\040\001\001\000\002\001\001\000" +
=======
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\020\003\u015a\004\020\005\030\010\024\011" +
    "\036\012\016\015\023\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\020\003\u0161\004\020\005\030" +
    "\010\024\011\036\012\016\015\023\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\014\u017b\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\014\u016a" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\020\003\u0171" +
    "\004\020\005\030\010\024\011\036\012\016\015\023\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\020\003\u0179\004\020\005\030\010\024" +
    "\011\036\012\016\015\023\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\020\003\u0188\004\020\005\030\010\024\011\036\012\016" +
    "\015\023\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\014\u01a0\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\014\u018f\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\020\003\u0196\004" +
    "\020\005\030\010\024\011\036\012\016\015\023\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\020\003\u019e\004\020\005\030\010\024\011" +
    "\036\012\016\015\023\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\013\u015f\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\013\u0163\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\022\003\u016a\004\020\007" +
    "\024\010\036\011\016\014\023\016\030\021\040\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
<<<<<<< HEAD
    "\002\001\001\000\002\001\001\000\004\013\u016f\001\001" +
    "\000\002\001\001" });
=======
    "\002\001\001\000\002\001\001\000\002\001\001\000\020" +
    "\003\u01ad\004\020\005\030\010\024\011\036\012\016\015" +
    "\023\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001" });
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$Sintax$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$Sintax$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$Sintax$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}


    
    private Symbol s;        

    public void syntax_error(Symbol s){
        this.s = s;
    }

    public Symbol getS(){        
        return this.s;
    }

}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$Sintax$actions {
  private final Sintax parser;

  /** Constructor */
  CUP$Sintax$actions(Sintax parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$Sintax$do_action(
    int                        CUP$Sintax$act_num,
    java_cup.runtime.lr_parser CUP$Sintax$parser,
    java.util.Stack            CUP$Sintax$stack,
    int                        CUP$Sintax$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$Sintax$result;

      /* select the action based on the action number */
      switch (CUP$Sintax$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 160: // LLAMARFUN ::= Identificador Parentesis_A Parentesis_C P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LLAMARFUN",15, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 153: // ACCIONES ::= Time Parentesis_A Numero Parentesis_C P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ACCIONES",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // ACCIONES ::= Fpremio Parentesis_A False Parentesis_C P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ACCIONES",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // ACCIONES ::= Fpremio Parentesis_A True Parentesis_C P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ACCIONES",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // ACCIONES ::= Fmasaje Parentesis_A False Parentesis_C P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ACCIONES",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // ACCIONES ::= Fmasaje Parentesis_A True Parentesis_C P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ACCIONES",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // ACCIONES ::= Fjuguete Parentesis_A False Parentesis_C P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ACCIONES",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // ACCIONES ::= Fjuguete Parentesis_A True Parentesis_C P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ACCIONES",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // ACCIONES ::= Fluz Parentesis_A False Parentesis_C P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ACCIONES",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 159: // LLAMARFUN ::= Identificador Parentesis_A Parentesis_C P_coma SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LLAMARFUN",15, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 145: // ACCIONES ::= Fluz Parentesis_A True Parentesis_C P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ACCIONES",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 158: // CREAFUN ::= Fun Identificador Parentesis_A Parentesis_C Llave_A Llave_C Fun Main Parentesis_A Parentesis_C Llave_A SENTENCIA Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CREAFUN",14, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-12)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 144: // ACCIONES ::= Fcomer Parentesis_A False Parentesis_C P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ACCIONES",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 157: // CREAFUN ::= Fun Identificador Parentesis_A Parentesis_C Llave_A SENTENCIA Llave_C Fun Main Parentesis_A Parentesis_C Llave_A SENTENCIA Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CREAFUN",14, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-13)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 143: // ACCIONES ::= Fcomer Parentesis_A True Parentesis_C P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ACCIONES",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 156: // CREAFUN ::= Fun Identificador Parentesis_A Parentesis_C Llave_A SENTENCIA Llave_C Fun Main Parentesis_A Parentesis_C Llave_A Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CREAFUN",14, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-12)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 142: // ACCIONES ::= Fagua Parentesis_A False Parentesis_C P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ACCIONES",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 155: // CREAFUN ::= Fun Identificador Parentesis_A Parentesis_C Llave_A Llave_C Fun Main Parentesis_A Parentesis_C Llave_A Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CREAFUN",14, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-11)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 141: // ACCIONES ::= Fagua Parentesis_A True Parentesis_C P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ACCIONES",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 154: // CREAFUN ::= Fun Identificador Parentesis_A Parentesis_C Llave_A SENTENCIA Llave_C CREAFUN 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CREAFUN",14, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 140: // ACCIONES ::= Time Parentesis_A Numero Parentesis_C P_coma SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ACCIONES",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 153: // CREAFUN ::= Fun Identificador Parentesis_A Parentesis_C Llave_A Llave_C CREAFUN 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CREAFUN",14, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 139: // ACCIONES ::= Fpremio Parentesis_A False Parentesis_C P_coma SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ACCIONES",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 152: // LOGICAS ::= Not Parentesis_A SENTENCIABOOLEANA Parentesis_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LOGICAS",13, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 138: // ACCIONES ::= Fpremio Parentesis_A True Parentesis_C P_coma SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ACCIONES",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 151: // LOGICAS ::= SENTENCIABOOLEANA Or SENTENCIABOOLEANA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LOGICAS",13, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 137: // ACCIONES ::= Fmasaje Parentesis_A False Parentesis_C P_coma SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ACCIONES",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 150: // LOGICAS ::= SENTENCIABOOLEANA And SENTENCIABOOLEANA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LOGICAS",13, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 136: // ACCIONES ::= Fmasaje Parentesis_A True Parentesis_C P_coma SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ACCIONES",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 149: // ACCIONES ::= Time Parentesis_A Numero Parentesis_C P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ACCIONES",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 135: // ACCIONES ::= Fjuguete Parentesis_A False Parentesis_C P_coma SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ACCIONES",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 148: // ACCIONES ::= Fpremio Parentesis_A BOOLEAN Parentesis_C P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ACCIONES",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 134: // ACCIONES ::= Fjuguete Parentesis_A True Parentesis_C P_coma SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ACCIONES",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 147: // ACCIONES ::= Fmasaje Parentesis_A BOOLEAN Parentesis_C P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ACCIONES",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 133: // ACCIONES ::= Fluz Parentesis_A False Parentesis_C P_coma SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ACCIONES",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 146: // ACCIONES ::= Fjuguete Parentesis_A BOOLEAN Parentesis_C P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ACCIONES",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 132: // ACCIONES ::= Fluz Parentesis_A True Parentesis_C P_coma SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ACCIONES",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 145: // ACCIONES ::= Fluz Parentesis_A BOOLEAN Parentesis_C P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ACCIONES",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 131: // ACCIONES ::= Fcomer Parentesis_A False Parentesis_C P_coma SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ACCIONES",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 144: // ACCIONES ::= Fcomer Parentesis_A BOOLEAN Parentesis_C P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ACCIONES",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 130: // ACCIONES ::= Fcomer Parentesis_A True Parentesis_C P_coma SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ACCIONES",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 143: // ACCIONES ::= Fagua Parentesis_A BOOLEAN Parentesis_C P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ACCIONES",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 129: // ACCIONES ::= Fagua Parentesis_A False Parentesis_C P_coma SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ACCIONES",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 142: // ACCIONES ::= Time Parentesis_A Numero Parentesis_C P_coma SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ACCIONES",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 128: // ACCIONES ::= Fagua Parentesis_A True Parentesis_C P_coma SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ACCIONES",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 141: // ACCIONES ::= Fpremio Parentesis_A BOOLEAN Parentesis_C P_coma SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ACCIONES",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 127: // VARIABLESG ::= Boolean Identificador Asignacion False P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLESG",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 140: // ACCIONES ::= Fmasaje Parentesis_A BOOLEAN Parentesis_C P_coma SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ACCIONES",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 126: // VARIABLESG ::= Boolean Identificador Asignacion True P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLESG",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 139: // ACCIONES ::= Fjuguete Parentesis_A BOOLEAN Parentesis_C P_coma SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ACCIONES",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 125: // VARIABLESG ::= String Identificador Asignacion Texto P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLESG",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 138: // ACCIONES ::= Fluz Parentesis_A BOOLEAN Parentesis_C P_coma SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ACCIONES",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 124: // VARIABLESG ::= Float Identificador Asignacion Flotante P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLESG",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 137: // ACCIONES ::= Fcomer Parentesis_A BOOLEAN Parentesis_C P_coma SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ACCIONES",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 123: // VARIABLESG ::= Int Identificador Asignacion Numero P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLESG",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 136: // ACCIONES ::= Fagua Parentesis_A BOOLEAN Parentesis_C P_coma SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ACCIONES",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 122: // VARIABLESG ::= Boolean Identificador Asignacion False P_coma VARIABLESG 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLESG",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 135: // ASIGNAG ::= Identificador Asignacion Candil Parentesis_A Parentesis_C P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ASIGNAG",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 121: // VARIABLESG ::= Boolean Identificador Asignacion True P_coma VARIABLESG 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLESG",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 134: // ASIGNAG ::= Identificador Asignacion Humedad Parentesis_A Parentesis_C P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ASIGNAG",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 120: // VARIABLESG ::= String Identificador Asignacion Texto P_coma VARIABLESG 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLESG",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 133: // ASIGNAG ::= Identificador Asignacion Peso Parentesis_A Parentesis_C P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ASIGNAG",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 119: // VARIABLESG ::= Float Identificador Asignacion Flotante P_coma VARIABLESG 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLESG",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 132: // ASIGNAG ::= Identificador Asignacion BOOLEAN P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ASIGNAG",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 118: // VARIABLESG ::= Int Identificador Asignacion Numero P_coma VARIABLESG 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLESG",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 131: // ASIGNAG ::= Identificador Asignacion Flotante P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ASIGNAG",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 117: // VARIABLESG ::= Boolean Identificador P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLESG",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 130: // ASIGNAG ::= Identificador Asignacion Texto P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ASIGNAG",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 116: // VARIABLESG ::= String Identificador P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLESG",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 129: // ASIGNAG ::= Identificador Asignacion Numero P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ASIGNAG",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 115: // VARIABLESG ::= Float Identificador P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLESG",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 128: // ASIGNAG ::= Identificador Asignacion Candil Parentesis_A Parentesis_C P_coma ASIGNAG 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ASIGNAG",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 114: // VARIABLESG ::= Int Identificador P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLESG",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 127: // ASIGNAG ::= Identificador Asignacion Humedad Parentesis_A Parentesis_C P_coma ASIGNAG 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ASIGNAG",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 113: // VARIABLESG ::= Boolean Identificador P_coma VARIABLESG 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLESG",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 126: // ASIGNAG ::= Identificador Asignacion Peso Parentesis_A Parentesis_C P_coma ASIGNAG 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ASIGNAG",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 112: // VARIABLESG ::= String Identificador P_coma VARIABLESG 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLESG",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 125: // ASIGNAG ::= Identificador Asignacion BOOLEAN P_coma ASIGNAG 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ASIGNAG",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 111: // VARIABLESG ::= Float Identificador P_coma VARIABLESG 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLESG",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 124: // ASIGNAG ::= Identificador Asignacion Flotante P_coma ASIGNAG 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ASIGNAG",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 110: // VARIABLESG ::= Int Identificador P_coma VARIABLESG 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLESG",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 123: // ASIGNAG ::= Identificador Asignacion Texto P_coma ASIGNAG 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ASIGNAG",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 109: // VARIABLESGF ::= Boolean Identificador Asignacion BOOLEAN P_coma Fun Main Parentesis_A Parentesis_C Llave_A SENTENCIA Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLESGF",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-11)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 122: // ASIGNAG ::= Identificador Asignacion Numero P_coma ASIGNAG 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ASIGNAG",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 108: // VARIABLESGF ::= Boolean Identificador Asignacion BOOLEAN P_coma Fun Main Parentesis_A Parentesis_C Llave_A Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLESGF",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-10)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 121: // ASIGNAG ::= Identificador Asignacion Candil Parentesis_A Parentesis_C P_coma VARIABLESG 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ASIGNAG",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 107: // VARIABLESGF ::= Boolean Identificador Asignacion BOOLEAN P_coma VARIABLESG Fun Main Parentesis_A Parentesis_C Llave_A Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLESGF",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-11)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 120: // ASIGNAG ::= Identificador Asignacion Humedad Parentesis_A Parentesis_C P_coma VARIABLESG 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ASIGNAG",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 106: // VARIABLESGF ::= Boolean Identificador Asignacion BOOLEAN P_coma VARIABLESG Fun Main Parentesis_A Parentesis_C Llave_A SENTENCIA Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLESGF",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-12)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 119: // ASIGNAG ::= Identificador Asignacion Peso Parentesis_A Parentesis_C P_coma VARIABLESG 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ASIGNAG",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 105: // VARIABLESGF ::= String Identificador Asignacion Texto P_coma Fun Main Parentesis_A Parentesis_C Llave_A SENTENCIA Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLESGF",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-11)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 118: // ASIGNAG ::= Identificador Asignacion BOOLEAN P_coma VARIABLESG 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ASIGNAG",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 104: // VARIABLESGF ::= String Identificador Asignacion Texto P_coma Fun Main Parentesis_A Parentesis_C Llave_A Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLESGF",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-10)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 117: // ASIGNAG ::= Identificador Asignacion Flotante P_coma VARIABLESG 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ASIGNAG",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 103: // VARIABLESGF ::= String Identificador Asignacion Texto P_coma VARIABLESG Fun Main Parentesis_A Parentesis_C Llave_A Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLESGF",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-11)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 116: // ASIGNAG ::= Identificador Asignacion Texto P_coma VARIABLESG 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ASIGNAG",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 102: // VARIABLESGF ::= String Identificador Asignacion Texto P_coma VARIABLESG Fun Main Parentesis_A Parentesis_C Llave_A SENTENCIA Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLESGF",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-12)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 115: // ASIGNAG ::= Identificador Asignacion Numero P_coma VARIABLESG 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ASIGNAG",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 101: // VARIABLESGF ::= Float Identificador Asignacion Flotante P_coma Fun Main Parentesis_A Parentesis_C Llave_A SENTENCIA Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLESGF",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-11)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 114: // VARIABLESG ::= Boolean ASIGNAG 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLESG",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 100: // VARIABLESGF ::= Float Identificador Asignacion Flotante P_coma Fun Main Parentesis_A Parentesis_C Llave_A Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLESGF",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-10)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 113: // VARIABLESG ::= String ASIGNAG 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLESG",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 99: // VARIABLESGF ::= Float Identificador Asignacion Flotante P_coma VARIABLESG Fun Main Parentesis_A Parentesis_C Llave_A Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLESGF",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-11)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 112: // VARIABLESG ::= Float ASIGNAG 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLESG",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 98: // VARIABLESGF ::= Float Identificador Asignacion Flotante P_coma VARIABLESG Fun Main Parentesis_A Parentesis_C Llave_A SENTENCIA Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLESGF",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-12)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 111: // VARIABLESG ::= Int ASIGNAG 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLESG",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 97: // VARIABLESGF ::= Int Identificador Asignacion Numero P_coma Fun Main Parentesis_A Parentesis_C Llave_A SENTENCIA Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLESGF",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-11)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 110: // VARIABLESG ::= Boolean Identificador P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLESG",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 96: // VARIABLESGF ::= Int Identificador Asignacion Numero P_coma Fun Main Parentesis_A Parentesis_C Llave_A Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLESGF",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-10)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 109: // VARIABLESG ::= String Identificador P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLESG",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 95: // VARIABLESGF ::= Int Identificador Asignacion Numero P_coma VARIABLESG Fun Main Parentesis_A Parentesis_C Llave_A Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLESGF",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-11)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 108: // VARIABLESG ::= Float Identificador P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLESG",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 94: // VARIABLESGF ::= Int Identificador Asignacion Numero P_coma VARIABLESG Fun Main Parentesis_A Parentesis_C Llave_A SENTENCIA Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLESGF",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-12)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 107: // VARIABLESG ::= Int Identificador P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLESG",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 93: // VARIABLESGF ::= Boolean Identificador P_coma VARIABLESG Fun Main Parentesis_A Parentesis_C Llave_A Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLESGF",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-9)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 106: // VARIABLESG ::= Boolean Identificador P_coma VARIABLESG 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLESG",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 92: // VARIABLESGF ::= Boolean Identificador P_coma Fun Main Parentesis_A Parentesis_C Llave_A Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLESGF",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 105: // VARIABLESG ::= String Identificador P_coma VARIABLESG 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLESG",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 91: // VARIABLESGF ::= Boolean Identificador P_coma VARIABLESG Fun Main Parentesis_A Parentesis_C Llave_A SENTENCIA Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLESGF",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-10)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 104: // VARIABLESG ::= Float Identificador P_coma VARIABLESG 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLESG",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 90: // VARIABLESGF ::= String Identificador P_coma VARIABLESG Fun Main Parentesis_A Parentesis_C Llave_A Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLESGF",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-9)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 103: // VARIABLESG ::= Int Identificador P_coma VARIABLESG 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLESG",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 89: // VARIABLESGF ::= String Identificador P_coma Fun Main Parentesis_A Parentesis_C Llave_A Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLESGF",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 102: // VARIABLESGF ::= ASIGNAG Fun Main Parentesis_A Parentesis_C Llave_A SENTENCIA Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLESGF",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 88: // VARIABLESGF ::= String Identificador P_coma VARIABLESG Fun Main Parentesis_A Parentesis_C Llave_A SENTENCIA Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLESGF",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-10)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 101: // VARIABLESGF ::= ASIGNAG Fun Main Parentesis_A Parentesis_C Llave_A Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLESGF",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 87: // VARIABLESGF ::= Float Identificador P_coma VARIABLESG Fun Main Parentesis_A Parentesis_C Llave_A Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLESGF",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-9)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 100: // VARIABLESGF ::= VARIABLESG Fun Main Parentesis_A Parentesis_C Llave_A SENTENCIA Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLESGF",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 86: // VARIABLESGF ::= Float Identificador P_coma Fun Main Parentesis_A Parentesis_C Llave_A Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLESGF",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 99: // VARIABLESGF ::= VARIABLESG Fun Main Parentesis_A Parentesis_C Llave_A Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLESGF",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 85: // VARIABLESGF ::= Float Identificador P_coma VARIABLESG Fun Main Parentesis_A Parentesis_C Llave_A SENTENCIA Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLESGF",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-10)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 98: // WHILE ::= While Parentesis_A SENTENCIABOOLEANA Parentesis_C Llave_A SENTENCIA Llave_C SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("WHILE",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 84: // VARIABLESGF ::= Int Identificador P_coma Fun Main Parentesis_A Parentesis_C Llave_A Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLESGF",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 97: // WHILE ::= While Parentesis_A SENTENCIABOOLEANA Parentesis_C Llave_A Llave_C SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("WHILE",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 83: // VARIABLESGF ::= Int Identificador P_coma VARIABLESG Fun Main Parentesis_A Parentesis_C Llave_A Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLESGF",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-9)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 96: // WHILE ::= While Parentesis_A SENTENCIABOOLEANA Parentesis_C Llave_A SENTENCIA Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("WHILE",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 82: // VARIABLESGF ::= Int Identificador P_coma VARIABLESG Fun Main Parentesis_A Parentesis_C Llave_A SENTENCIA Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLESGF",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-10)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 95: // WHILE ::= While Parentesis_A SENTENCIABOOLEANA Parentesis_C Llave_A Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("WHILE",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 81: // WHILE ::= While Parentesis_A SENTENCIABOOLEANA Parentesis_C Llave_A SENTENCIA Llave_C SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("WHILE",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 94: // FOR ::= For Parentesis_A Int Identificador Asignacion Numero P_coma Identificador OpR Identificador P_coma Identificador Dec Parentesis_C Llave_A Llave_C SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FOR",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-16)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 80: // WHILE ::= While Parentesis_A SENTENCIABOOLEANA Parentesis_C Llave_A Llave_C SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("WHILE",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 93: // FOR ::= For Parentesis_A Int Identificador Asignacion Numero P_coma Identificador OpR Identificador P_coma Identificador Dec Parentesis_C Llave_A Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FOR",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-15)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 79: // WHILE ::= While Parentesis_A SENTENCIABOOLEANA Parentesis_C Llave_A SENTENCIA Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("WHILE",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 92: // FOR ::= For Parentesis_A Int Identificador Asignacion Numero P_coma Identificador OpR Identificador P_coma Identificador Dec Parentesis_C Llave_A SENTENCIA Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FOR",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-16)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 78: // WHILE ::= While Parentesis_A SENTENCIABOOLEANA Parentesis_C Llave_A Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("WHILE",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 91: // FOR ::= For Parentesis_A Int Identificador Asignacion Numero P_coma Identificador OpR Identificador P_coma Identificador Dec Parentesis_C Llave_A SENTENCIA Llave_C SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FOR",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-17)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 77: // FOR ::= For Parentesis_A Int Identificador Asignacion Numero P_coma Identificador OpR Identificador P_coma Identificador Dec Parentesis_C Llave_A Llave_C SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FOR",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-16)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 90: // FOR ::= For Parentesis_A Int Identificador Asignacion Numero P_coma Identificador OpR Numero P_coma Identificador Dec Parentesis_C Llave_A Llave_C SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FOR",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-16)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 76: // FOR ::= For Parentesis_A Int Identificador Asignacion Numero P_coma Identificador OpR Identificador P_coma Identificador Dec Parentesis_C Llave_A Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FOR",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-15)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 89: // FOR ::= For Parentesis_A Int Identificador Asignacion Numero P_coma Identificador OpR Numero P_coma Identificador Dec Parentesis_C Llave_A Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FOR",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-15)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 75: // FOR ::= For Parentesis_A Int Identificador Asignacion Numero P_coma Identificador OpR Identificador P_coma Identificador Dec Parentesis_C Llave_A SENTENCIA Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FOR",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-16)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 88: // FOR ::= For Parentesis_A Int Identificador Asignacion Numero P_coma Identificador OpR Numero P_coma Identificador Dec Parentesis_C Llave_A SENTENCIA Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FOR",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-16)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 74: // FOR ::= For Parentesis_A Int Identificador Asignacion Numero P_coma Identificador OpR Identificador P_coma Identificador Dec Parentesis_C Llave_A SENTENCIA Llave_C SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FOR",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-17)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 87: // FOR ::= For Parentesis_A Int Identificador Asignacion Numero P_coma Identificador OpR Numero P_coma Identificador Dec Parentesis_C Llave_A SENTENCIA Llave_C SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FOR",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-17)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 73: // FOR ::= For Parentesis_A Int Identificador Asignacion Numero P_coma Identificador OpR Numero P_coma Identificador Dec Parentesis_C Llave_A Llave_C SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FOR",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-16)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 86: // FOR ::= For Parentesis_A Int Identificador Asignacion Numero P_coma Identificador OpR Identificador P_coma Identificador Inc Parentesis_C Llave_A Llave_C SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FOR",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-16)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 72: // FOR ::= For Parentesis_A Int Identificador Asignacion Numero P_coma Identificador OpR Numero P_coma Identificador Dec Parentesis_C Llave_A Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FOR",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-15)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 85: // FOR ::= For Parentesis_A Int Identificador Asignacion Numero P_coma Identificador OpR Identificador P_coma Identificador Inc Parentesis_C Llave_A Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FOR",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-15)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 71: // FOR ::= For Parentesis_A Int Identificador Asignacion Numero P_coma Identificador OpR Numero P_coma Identificador Dec Parentesis_C Llave_A SENTENCIA Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FOR",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-16)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 84: // FOR ::= For Parentesis_A Int Identificador Asignacion Numero P_coma Identificador OpR Identificador P_coma Identificador Inc Parentesis_C Llave_A SENTENCIA Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FOR",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-16)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 70: // FOR ::= For Parentesis_A Int Identificador Asignacion Numero P_coma Identificador OpR Numero P_coma Identificador Dec Parentesis_C Llave_A SENTENCIA Llave_C SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FOR",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-17)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 83: // FOR ::= For Parentesis_A Int Identificador Asignacion Numero P_coma Identificador OpR Identificador P_coma Identificador Inc Parentesis_C Llave_A SENTENCIA Llave_C SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FOR",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-17)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 69: // FOR ::= For Parentesis_A Int Identificador Asignacion Numero P_coma Identificador OpR Identificador P_coma Identificador Inc Parentesis_C Llave_A Llave_C SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FOR",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-16)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 82: // FOR ::= For Parentesis_A Int Identificador Asignacion Numero P_coma Identificador OpR Numero P_coma Identificador Inc Parentesis_C Llave_A Llave_C SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FOR",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-16)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 68: // FOR ::= For Parentesis_A Int Identificador Asignacion Numero P_coma Identificador OpR Identificador P_coma Identificador Inc Parentesis_C Llave_A Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FOR",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-15)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 81: // FOR ::= For Parentesis_A Int Identificador Asignacion Numero P_coma Identificador OpR Numero P_coma Identificador Inc Parentesis_C Llave_A Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FOR",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-15)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 67: // FOR ::= For Parentesis_A Int Identificador Asignacion Numero P_coma Identificador OpR Identificador P_coma Identificador Inc Parentesis_C Llave_A SENTENCIA Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FOR",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-16)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 80: // FOR ::= For Parentesis_A Int Identificador Asignacion Numero P_coma Identificador OpR Numero P_coma Identificador Inc Parentesis_C Llave_A SENTENCIA Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FOR",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-16)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 66: // FOR ::= For Parentesis_A Int Identificador Asignacion Numero P_coma Identificador OpR Identificador P_coma Identificador Inc Parentesis_C Llave_A SENTENCIA Llave_C SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FOR",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-17)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 79: // FOR ::= For Parentesis_A Int Identificador Asignacion Numero P_coma Identificador OpR Numero P_coma Identificador Inc Parentesis_C Llave_A SENTENCIA Llave_C SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FOR",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-17)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 65: // FOR ::= For Parentesis_A Int Identificador Asignacion Numero P_coma Identificador OpR Numero P_coma Identificador Inc Parentesis_C Llave_A Llave_C SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FOR",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-16)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 78: // IF ::= If Parentesis_A LOGICAS Parentesis_C Llave_A Llave_C Else Llave_A SENTENCIA Llave_C SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-10)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 64: // FOR ::= For Parentesis_A Int Identificador Asignacion Numero P_coma Identificador OpR Numero P_coma Identificador Inc Parentesis_C Llave_A Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FOR",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-15)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 77: // IF ::= If Parentesis_A LOGICAS Parentesis_C Llave_A SENTENCIA Llave_C Else Llave_A SENTENCIA Llave_C SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-11)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 63: // FOR ::= For Parentesis_A Int Identificador Asignacion Numero P_coma Identificador OpR Numero P_coma Identificador Inc Parentesis_C Llave_A SENTENCIA Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FOR",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-16)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 76: // IF ::= If Parentesis_A LOGICAS Parentesis_C Llave_A Llave_C Else Llave_A SENTENCIA Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-9)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 62: // FOR ::= For Parentesis_A Int Identificador Asignacion Numero P_coma Identificador OpR Numero P_coma Identificador Inc Parentesis_C Llave_A SENTENCIA Llave_C SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FOR",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-17)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 75: // IF ::= If Parentesis_A LOGICAS Parentesis_C Llave_A SENTENCIA Llave_C Else Llave_A SENTENCIA Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-10)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 61: // IF ::= If Parentesis_A SENTENCIABOOLEANA Parentesis_C Llave_A Llave_C Else Llave_A SENTENCIA Llave_C SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-10)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 74: // IF ::= If Parentesis_A LOGICAS Parentesis_C Llave_A SENTENCIA Llave_C Else Llave_A Llave_C SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-10)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 60: // IF ::= If Parentesis_A SENTENCIABOOLEANA Parentesis_C Llave_A SENTENCIA Llave_C Else Llave_A SENTENCIA Llave_C SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-11)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 73: // IF ::= If Parentesis_A LOGICAS Parentesis_C Llave_A SENTENCIA Llave_C Else Llave_A Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-9)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 59: // IF ::= If Parentesis_A SENTENCIABOOLEANA Parentesis_C Llave_A Llave_C Else Llave_A SENTENCIA Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-9)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 72: // IF ::= If Parentesis_A LOGICAS Parentesis_C Llave_A Llave_C Else Llave_A Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 58: // IF ::= If Parentesis_A SENTENCIABOOLEANA Parentesis_C Llave_A SENTENCIA Llave_C Else Llave_A SENTENCIA Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-10)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 71: // IF ::= If Parentesis_A LOGICAS Parentesis_C Llave_A Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 57: // IF ::= If Parentesis_A SENTENCIABOOLEANA Parentesis_C Llave_A SENTENCIA Llave_C Else Llave_A Llave_C SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-10)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 70: // IF ::= If Parentesis_A LOGICAS Parentesis_C Llave_A Llave_C SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 56: // IF ::= If Parentesis_A SENTENCIABOOLEANA Parentesis_C Llave_A SENTENCIA Llave_C Else Llave_A Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-9)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 69: // IF ::= If Parentesis_A LOGICAS Parentesis_C Llave_A SENTENCIA Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 55: // IF ::= If Parentesis_A SENTENCIABOOLEANA Parentesis_C Llave_A Llave_C Else Llave_A Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 68: // IF ::= If Parentesis_A LOGICAS Parentesis_C Llave_A SENTENCIA Llave_C SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 54: // IF ::= If Parentesis_A SENTENCIABOOLEANA Parentesis_C Llave_A Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 67: // IF ::= If Parentesis_A SENTENCIABOOLEANA Parentesis_C Llave_A Llave_C Else Llave_A SENTENCIA Llave_C SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-10)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 53: // IF ::= If Parentesis_A SENTENCIABOOLEANA Parentesis_C Llave_A Llave_C SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 66: // IF ::= If Parentesis_A SENTENCIABOOLEANA Parentesis_C Llave_A SENTENCIA Llave_C Else Llave_A SENTENCIA Llave_C SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-11)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 52: // IF ::= If Parentesis_A SENTENCIABOOLEANA Parentesis_C Llave_A SENTENCIA Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 65: // IF ::= If Parentesis_A SENTENCIABOOLEANA Parentesis_C Llave_A Llave_C Else Llave_A SENTENCIA Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-9)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 51: // IF ::= If Parentesis_A SENTENCIABOOLEANA Parentesis_C Llave_A SENTENCIA Llave_C SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 64: // IF ::= If Parentesis_A SENTENCIABOOLEANA Parentesis_C Llave_A SENTENCIA Llave_C Else Llave_A SENTENCIA Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-10)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 50: // SENTENCIABOOLEANA ::= BOOLEAN Igual Identificador 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIABOOLEANA",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 63: // IF ::= If Parentesis_A SENTENCIABOOLEANA Parentesis_C Llave_A SENTENCIA Llave_C Else Llave_A Llave_C SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-10)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 49: // SENTENCIABOOLEANA ::= Identificador Igual False 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIABOOLEANA",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 62: // IF ::= If Parentesis_A SENTENCIABOOLEANA Parentesis_C Llave_A SENTENCIA Llave_C Else Llave_A Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-9)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // IF ::= If Parentesis_A SENTENCIABOOLEANA Parentesis_C Llave_A Llave_C Else Llave_A Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // IF ::= If Parentesis_A SENTENCIABOOLEANA Parentesis_C Llave_A Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // IF ::= If Parentesis_A SENTENCIABOOLEANA Parentesis_C Llave_A Llave_C SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // IF ::= If Parentesis_A SENTENCIABOOLEANA Parentesis_C Llave_A SENTENCIA Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // IF ::= If Parentesis_A SENTENCIABOOLEANA Parentesis_C Llave_A SENTENCIA Llave_C SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // BOOLEAN ::= False 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("BOOLEAN",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // BOOLEAN ::= True 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("BOOLEAN",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 48: // SENTENCIABOOLEANA ::= Identificador Igual True 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIABOOLEANA",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 54: // SENTENCIABOOLEANA ::= Identificador Igual BOOLEAN 
=======
          case 47: // SENTENCIABOOLEANA ::= Numero Igual Identificador 
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIABOOLEANA",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 53: // SENTENCIABOOLEANA ::= Numero Igual Identificador 
=======
          case 46: // SENTENCIABOOLEANA ::= Identificador Igual Numero 
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIABOOLEANA",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 52: // SENTENCIABOOLEANA ::= Identificador Igual Numero 
=======
          case 45: // SENTENCIABOOLEANA ::= Identificador Igual Identificador 
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIABOOLEANA",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 51: // SENTENCIABOOLEANA ::= Identificador Igual Identificador 
=======
          case 44: // SENTENCIABOOLEANA ::= Texto Igual Identificador 
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIABOOLEANA",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 50: // SENTENCIABOOLEANA ::= Texto Igual Identificador 
=======
          case 43: // SENTENCIABOOLEANA ::= Identificador Igual Texto 
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIABOOLEANA",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 49: // SENTENCIABOOLEANA ::= Identificador Igual Texto 
=======
          case 42: // SENTENCIABOOLEANA ::= Flotante OpR Identificador 
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIABOOLEANA",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 48: // SENTENCIABOOLEANA ::= Flotante OpR Identificador 
=======
          case 41: // SENTENCIABOOLEANA ::= Numero OpR Identificador 
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIABOOLEANA",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 47: // SENTENCIABOOLEANA ::= Numero OpR Identificador 
=======
          case 40: // SENTENCIABOOLEANA ::= Identificador OpR Flotante 
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIABOOLEANA",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 46: // SENTENCIABOOLEANA ::= Identificador OpR Flotante 
=======
          case 39: // SENTENCIABOOLEANA ::= Identificador OpR Numero 
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIABOOLEANA",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 45: // SENTENCIABOOLEANA ::= Identificador OpR Numero 
=======
          case 38: // SENTENCIABOOLEANA ::= Identificador OpR Identificador 
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIABOOLEANA",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 44: // SENTENCIABOOLEANA ::= Identificador OpR Identificador 
=======
          case 37: // SENTENCIABOOLEANA ::= BOOLEAN 
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIABOOLEANA",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 43: // SENTENCIABOOLEANA ::= BOOLEAN 
=======
          case 36: // BOOLEAN ::= False 
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("BOOLEAN",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 42: // ASIGNACION ::= Identificador Asignacion Identificador P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ASIGNACION",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // ASIGNACION ::= Identificador Asignacion Candil Parentesis_A Parentesis_C P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ASIGNACION",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // ASIGNACION ::= Identificador Asignacion Humedad Parentesis_A Parentesis_C P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ASIGNACION",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // ASIGNACION ::= Identificador Asignacion Peso Parentesis_A Parentesis_C P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ASIGNACION",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // ASIGNACION ::= Identificador Asignacion BOOLEAN P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ASIGNACION",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // ASIGNACION ::= Identificador Asignacion Flotante P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ASIGNACION",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // ASIGNACION ::= Identificador Asignacion Texto P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ASIGNACION",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 35: // BOOLEAN ::= True 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("BOOLEAN",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 35: // ASIGNACION ::= Identificador Asignacion Numero P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ASIGNACION",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 34: // ASIGNACION ::= Identificador Asignacion Identificador P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ASIGNACION",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 34: // ASIGNACION ::= Identificador Asignacion Identificador P_coma SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ASIGNACION",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 33: // ASIGNACION ::= Identificador Asignacion BOOLEAN P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ASIGNACION",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 33: // ASIGNACION ::= Identificador Asignacion Candil Parentesis_A Parentesis_C P_coma SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ASIGNACION",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 32: // ASIGNACION ::= Identificador Asignacion Flotante P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ASIGNACION",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 32: // ASIGNACION ::= Identificador Asignacion Humedad Parentesis_A Parentesis_C P_coma SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ASIGNACION",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 31: // ASIGNACION ::= Identificador Asignacion Texto P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ASIGNACION",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 31: // ASIGNACION ::= Identificador Asignacion Peso Parentesis_A Parentesis_C P_coma SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ASIGNACION",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 30: // ASIGNACION ::= Identificador Asignacion Numero P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ASIGNACION",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 30: // ASIGNACION ::= Identificador Asignacion BOOLEAN P_coma SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ASIGNACION",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 29: // ASIGNACION ::= Identificador Asignacion Identificador P_coma SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ASIGNACION",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 29: // ASIGNACION ::= Identificador Asignacion Flotante P_coma SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ASIGNACION",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 28: // ASIGNACION ::= Identificador Asignacion BOOLEAN P_coma SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ASIGNACION",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 28: // ASIGNACION ::= Identificador Asignacion Texto P_coma SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ASIGNACION",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 27: // ASIGNACION ::= Identificador Asignacion Flotante P_coma SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ASIGNACION",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 27: // ASIGNACION ::= Identificador Asignacion Numero P_coma SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ASIGNACION",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 26: // ASIGNACION ::= Identificador Asignacion Texto P_coma SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ASIGNACION",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 26: // DECLARACION ::= Boolean ASIGNACION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DECLARACION",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
=======
          case 25: // ASIGNACION ::= Identificador Asignacion Numero P_coma SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ASIGNACION",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 25: // DECLARACION ::= String ASIGNACION 
=======
          case 24: // DECLARACION ::= Boolean ASIGNACION 
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DECLARACION",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 24: // DECLARACION ::= Float ASIGNACION 
=======
          case 23: // DECLARACION ::= String ASIGNACION 
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DECLARACION",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 23: // DECLARACION ::= Int ASIGNACION 
=======
          case 22: // DECLARACION ::= Float ASIGNACION 
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DECLARACION",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 22: // DECLARACION ::= Boolean Identificador P_coma 
=======
          case 21: // DECLARACION ::= Int ASIGNACION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DECLARACION",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // DECLARACION ::= Boolean Identificador P_coma 
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DECLARACION",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 21: // DECLARACION ::= String Identificador P_coma 
=======
          case 19: // DECLARACION ::= String Identificador P_coma 
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DECLARACION",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 20: // DECLARACION ::= Float Identificador P_coma 
=======
          case 18: // DECLARACION ::= Float Identificador P_coma 
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DECLARACION",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 19: // DECLARACION ::= Int Identificador P_coma 
=======
          case 17: // DECLARACION ::= Int Identificador P_coma 
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DECLARACION",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 18: // DECLARACION ::= Boolean Identificador P_coma SENTENCIA 
=======
          case 16: // DECLARACION ::= Boolean Identificador P_coma SENTENCIA 
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DECLARACION",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 17: // DECLARACION ::= String Identificador P_coma SENTENCIA 
=======
          case 15: // DECLARACION ::= String Identificador P_coma SENTENCIA 
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DECLARACION",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 16: // DECLARACION ::= Float Identificador P_coma SENTENCIA 
=======
          case 14: // DECLARACION ::= Float Identificador P_coma SENTENCIA 
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DECLARACION",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 15: // DECLARACION ::= Int Identificador P_coma SENTENCIA 
=======
          case 13: // DECLARACION ::= Int Identificador P_coma SENTENCIA 
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DECLARACION",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 14: // SENTENCIA ::= LLAMARFUN 
=======
          case 12: // SENTENCIA ::= ASIGNACION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIA",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // SENTENCIA ::= ACCIONES 
>>>>>>> 4932b1cba8c11737999bd6de85f82445b0838724
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIA",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // SENTENCIA ::= ASIGNACION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIA",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // SENTENCIA ::= ACCIONES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIA",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // SENTENCIA ::= WHILE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIA",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // SENTENCIA ::= FOR 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIA",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // SENTENCIA ::= IF 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIA",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // SENTENCIA ::= DECLARACION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIA",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // INICIO ::= Class Identificador Llave_A CREAFUN Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // INICIO ::= Class Identificador Llave_A VARIABLESGF Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // INICIO ::= Class Identificador Llave_A Fun Main Parentesis_A Parentesis_C Llave_A SENTENCIA Llave_C Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-10)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // INICIO ::= Fun Main Parentesis_A Parentesis_C Llave_A SENTENCIA Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // INICIO ::= Class Identificador Llave_A Fun Main Parentesis_A Parentesis_C Llave_A Llave_C Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-9)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // INICIO ::= Fun Main Parentesis_A Parentesis_C Llave_A Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // INICIO ::= Class Identificador Llave_A Llave_C 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= INICIO EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).value;
		RESULT = start_val;
              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$Sintax$parser.done_parsing();
          return CUP$Sintax$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

