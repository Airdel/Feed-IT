/*
    Feed-IT - Analizador Sint치ctico
    Declaraciones preliminares
*/
package analizador;

/*
    importaci칩n de la clase java_cup.runtime
*/

import java_cup.runtime.*;
import java.io.fileReader;

parser code {:

    /*Reporte de error encontrado*/

    public void report_error(String message, Object info) {
        StringBuilder m = new StringBuilder("Error");
        if (info instanceof java_cup.runtime.Symbol) {
            java_cup.runtime.Symbol s = ((java_cup.runtime.Symbol) info);
            if (s.left >= 0) {                
                m.append(" En la linea "+(s.left+1));
                if (s.right >= 0)
                    m.append(", columna "+(s.right+1));
            }
        }
        m.append(" : "+message);
        System.err.println(m);
    }

    /* Cuando se encuentra un error de donde el sistema no puede
        recuperarse, se lanza un error fatal. Se despliega el mensaje
        de error y se finaliza la ejecucion. */

    public void report_fatal_error(String message, Object info) {
        report_error(message, info);
        System.exit(1);
    }

    /* Metodo main para garantizar la ejecucion del analizador
       lexico y sintactico, ademas que se pase como parametro la tabla
       de simbolos correspondiente. */
    public static void main(String[] args){
        try {
            AnalizadorSintactico asin = new AnalizadorSintactico(
                    new AnalizadorLexico( new FileReader(args[0])));
            Object result = asin.parse().value;
            System.out.println("\n*** Resultados finales ***");
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
:};


/*
    Declaraci칩n de simbolos terminales y no terminales

    --Terminales (Tokens obtenidos del analisis lexico
        Terminales sin valor son listados primero.
        Terminales con valor son listado en segunda o dem치s lineas
*/

terminal        OP_SUMA, OP_RESTA, OP_MULT, PARENIZQ, PARENDER;
terminal Integer    ENTERO;
terminal String     STRING;
terminal Float      FLOAT;
